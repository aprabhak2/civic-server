function appRun(Security,$rootScope,$state){"use strict";$rootScope.view={},$rootScope.$on("$stateChangeSuccess",function(event,toState){$rootScope.view.navMode=toState.data.navMode}),$rootScope.$state=$state,Security.requestCurrentUser()}function sessionInfo(ConfigService){"use strict";return{restrict:"EA",template:"<h2>CIViC Server URL: {{ conf.serverUrl }}</h2>",link:function(scope){scope.conf=ConfigService}}}angular.module("civicClient",["ui.router","ct.ui.router.extras","ui.bootstrap","ui.grid","ui.grid.autoResize","ui.grid.cellNav","ngTagsInput","ngResource","dialogs.main","yaru22.angular-timeago","ngFitText","civic.states","civic.services","civic.security","civic.login","civic.common","angular-lodash","civic.pages","civic.account","civic.browse","civic.events"]).run(appRun),appRun.$inject=["Security","$rootScope","$state"],angular.module("civic.security",["civic.security.authorization","civic.security.service","civic.security.interceptor","civic.security.login"]),angular.module("civic.states",["ui.router"]),angular.module("civic.services",[]),angular.module("civic.pages",["civic.security.authorization","ui.router"]),angular.module("civic.account",["civic.security.authorization","ui.router"]),angular.module("civic.common",["ui.router"]),angular.module("civic.login",["ui.router"]),angular.module("civic.browse",["ui.grid.selection","ui.router"]),angular.module("civic.search",["ui.router"]),angular.module("civic.events",["ui.grid.selection","ui.router"]),angular.module("httpMocks",["ngTable","ngMockE2E"]),angular.module("civicClient").value("$anchorScroll",angular.noop),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("home"),$urlRouterProvider.when("/events/genes/:geneId","/events/genes/:geneId/summary"),$urlRouterProvider.when("/events/genes","/events"),$stateProvider.state("home",{url:"/home",controller:"HomeCtrl",templateUrl:"app/pages/home.tpl.html",data:{titleExp:'"Home"',navMode:"home"}}).state("collaborate",{url:"/collaborate",controller:"CollaborateCtrl",templateUrl:"app/pages/collaborate.tpl.html",data:{titleExp:'"Collaborate"',navMode:"sub"}}).state("help",{url:"/help",controller:"HelpCtrl",templateUrl:"app/pages/help.tpl.html",data:{titleExp:'"Help"',navMode:"sub"}}).state("contact",{url:"/contact",controller:"ContactCtrl",templateUrl:"app/pages/contact.tpl.html",data:{titleExp:'"Contact"',navMode:"sub"}}),$stateProvider.state("browse",{url:"/browse",controller:"BrowseCtrl",templateUrl:"app/views/browse/browse.tpl.html",data:{titleExp:'"Browse"',navMode:"sub"}}),$stateProvider.state("events",{url:"/events",templateUrl:"app/views/events/eventsView.tpl.html",data:{titleExp:'"Choose Gene"',navMode:"sub"},resolve:{Genes:"Genes",geneList:["Genes",function(Genes){return Genes.queryNames().$promise}]},controller:["geneList","$scope",function(geneList,$scope){$scope.genes=geneList}],onExit:["$deepStateRedirect",function($deepStateRedirect){$deepStateRedirect.reset()}]}).state("events.genes",{"abstract":!0,url:"/genes/:geneId",templateUrl:"app/views/events/genes/genesView.tpl.html",data:{titleExp:'"Event"',navMode:"sub"},resolve:{Genes:"Genes",MyGene:"MyGene",gene:["Genes","$stateParams","$log",function(Genes,$stateParams,$log){return $log.info("events.genes - resolving gene"),Genes.get({geneId:$stateParams.geneId}).$promise}],geneDetails:["MyGene","$stateParams","$log",function(MyGene,$stateParams,$log){return $log.info("events.genes - resolving geneDetails"),MyGene.getDetails({geneId:$stateParams.geneId})}]},controller:"GenesViewCtrl",onExit:["$deepStateRedirect",function($deepStateRedirect){$deepStateRedirect.reset()}]}).state("events.genes.summary",{url:"/summary",template:'<gene-summary class="col-xs-12"></gene-summary>',data:{titleExp:'"Gene " + gene.entrez_name + " Summary"',navMode:"sub"},deepStateRedirect:!0}).state("events.genes.edit",{url:"/edit",template:'<gene-edit class="col-xs-12"></gene-edit>',controller:"GeneEditCtrl",resolve:{geneEdit:["Genes","$stateParams","$log",function(Genes,$stateParams,$log){return $log.info("appStates: resolving geneEdit."),Genes.get({geneId:$stateParams.geneId}).$promise}]},data:{titleExp:'"Gene " + gene.entrez_name + " Edit"',navMode:"sub"}}).state("events.genes.talk",{url:"/talk",template:'<gene-talk class="col-xs-12"></gene-talk>',data:{titleExp:'"Gene " + gene.entrez_name + " Talk"',navMode:"sub"},controller:["gene","$scope",function(gene,$scope){$scope.gene=gene}]}).state("events.genes.talk.comments",{url:"/comments",template:"<gene-talk-comments></gene-talk-comments>",data:{titleExp:'"Gene " + gene.entrez_name + " Talk"',navMode:"sub"},controller:["gene","$scope",function(gene,$scope){$scope.gene=gene}]}).state("events.genes.talk.changes",{url:"/changes/:suggestedChangeId",template:"<gene-talk-change></gene-talk-change>",data:{titleExp:'"Gene " + gene.entrez_name + " Changes"',navMode:"sub"}}).state("events.genes.summary.variantGroups",{"abstract":!0,url:"/variant-groups/:variantGroupId",templateUrl:"app/views/events/variantGroups/variantGroupsView.tpl.html",data:{titleExp:'"Variant Group"',navMode:"sub"},resolve:{VariantGroups:"VariantGroups",variantGroup:["VariantGroups","$stateParams",function(VariantGroups,$stateParams){return VariantGroups.get({variantGroupId:$stateParams.variantGroupId}).$promise}]},controller:"VariantGroupsCtrl"}).state("events.genes.summary.variantGroups.summary",{url:"/summary",template:"<variant-group-summary></variant-group-summary>",data:{titleExp:'"Variant Group " + variantGroup.name + " Summary"',navMode:"sub"},deepStateRedirect:{params:["variantGroupId"]}}).state("events.genes.summary.variantGroups.edit",{url:"/edit",template:"<variant-group-edit></variant-group-edit>",data:{titleExp:'"Variant Group " + variantGroup.name + " Edit"',navMode:"sub"}}).state("events.genes.summary.variantGroups.talk",{url:"/talk",template:"<variant-group-talk></variant-group-talk>",data:{titleExp:'"Variant Group " + variantGroup.name + " Talk"',navMode:"sub"},controller:["variantGroup","$scope",function(variantGroup,$scope){$scope.variantGroup=variantGroup}]}).state("events.genes.summary.variantGroups.talk.comments",{url:"/comments",template:"<variant-group-talk-comments></variant-group-talk-comments>",data:{titleExp:'"Variant Group " + variantGroup.name + " Comments"',navMode:"sub"},controller:["variantGroup","$scope",function(variantGroup,$scope){$scope.variantGroup=variantGroup}]}).state("events.genes.summary.variants",{abtract:!0,url:"/variants/:variantId",controller:"VariantsViewCtrl",templateUrl:"app/views/events/variants/variantsView.tpl.html",resolve:{Variants:"Variants",variant:["Variants","$stateParams","$log",function(Variants,$stateParams,$log){return $log.info("events.variants - resolving variant"),Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}).$promise}]}}).state("events.genes.summary.variants.summary",{url:"/summary",template:"<variant-summary></variant-summary>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name  + " Summary"',navMode:"sub"},deepStateRedirect:{params:["variantId"]}}).state("events.genes.summary.variants.edit",{url:"/edit",template:"<variant-edit></variant-edit>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Edit"',navMode:"sub"},resolve:{variantEdit:["Variants","$stateParams","$log",function(Variants,$stateParams,$log){return $log.info("appStates: resolving variantEdit."),Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}).$promise}]}}).state("events.genes.summary.variants.talk",{url:"/talk",template:"<variant-talk></variant-talk>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.talk.comments",{url:"/comments",template:"<variant-talk-comments></variant-talk-comments>",data:{titleExp:'"Variant " + variant.name + " Talk"',navMode:"sub"},controller:["variant","$scope",function(variant,$scope){$scope.variant=variant}]}).state("events.genes.summary.variants.talk.changes",{url:"/changes/:suggestedChangeId",template:"<variant-talk-change></variant-talk-change>",data:{titleExp:'"Variant " + variant.name + " Changes"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence",{"abstract":!0,url:"/evidence/:evidenceItemId",controller:"EvidenceViewCtrl",templateUrl:"app/views/events/evidence/evidenceView.tpl.html",resolve:{Evidence:"Evidence",evidence:["Evidence","$stateParams","$log",function(Evidence,$stateParams,$log){return $log.info("events.evidence- resolving evidence"),Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}).$promise}]}}).state("events.genes.summary.variants.summary.evidence.summary",{url:"/summary",template:"<evidence-summary></evidence-summary>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Summary"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.edit",{url:"/edit",template:"<evidence-edit></evidence-edit>",resolve:{evidenceEdit:["Evidence","$stateParams","$log",function(Evidence,$stateParams,$log){return $log.info("appStates: resolving evidenceEdit."),Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}).$promise}]},data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " / " + evidence.id + " Edit"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk",{url:"/talk",template:"<evidence-talk></evidence-talk>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Talk"',navMode:"sub"}}).state("events.genes.summary.variants.summary.evidence.talk.comments",{url:"/comments",template:"<evidence-talk-comments></evidence-talk-comments>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Talk"',navMode:"sub"},controller:["evidence","$scope",function(evidence,$scope){$scope.evidence=evidence}]}).state("events.genes.summary.variants.summary.evidence.talk.changes",{url:"/changes/:suggestedChangeId",template:"<evidence-talk-change></evidence-talk-change>",data:{titleExp:'"Event " + gene.entrez_name + " / " + variant.name + " Changes"',navMode:"sub"},controller:["evidence","$scope",function(evidence,$scope){$scope.evidence=evidence}]})}angular.module("civic.states").config(routesConfig),routesConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function labelifyFilter(){return function(input){return input=input.replace(/_/g," "),input.replace(/(?:^|\s)\S/g,function(a){return a.toUpperCase()})}}function arrayToListFilter(_){return function(input,limitTo,terminator,showTotal){if(limitTo=parseInt(limitTo,10),terminator=terminator?terminator:"",_.isArray(input)&&parseInt(limitTo,10)){var output=input.slice(0,limitTo).join(", ").concat(terminator);return showTotal&&input.length>limitTo&&(output=output+'<span class="more"> ('+String(input.length-limitTo)+" more)</span>"),output}return _.isArray(input)?input.join(", "):input}}function encodeUri($window){return function(input){return $window.encodeURIComponent(input)}}function decodeUri($window){return function(input){return $window.decodeURIComponent(input)}}function capitalizeFilter(){return function(input){return null!=input&&(input=input.toLowerCase()),input.substring(0,1).toUpperCase()+input.substring(1)}}angular.module("civic.common").filter("labelify",labelifyFilter).filter("arrayToList",arrayToListFilter).filter("encodeUri",encodeUri).filter("capitalize",capitalizeFilter).filter("decodeUri",decodeUri),arrayToListFilter.$inject=["_"],encodeUri.$inject=["$window"],decodeUri.$inject=["$window"]}(),/* ng-FitText.js v3.1.0
 * https://github.com/patrickmarabeas/ng-FitText.js
 *
 * Original jQuery project: https://github.com/davatron5000/FitText.js
 * Includes use of Underscore's debounce function
 *
 * Copyright 2014, Patrick Marabeas http://marabeas.io
 * Released under the MIT license
 * http://opensource.org/licenses/mit-license.php
 *
 * Date: 18/10/2014
 */
function(window,document,angular,undefined){"use strict";angular.module("ngFitText",[]).value("config",{debounce:!1,delay:250,min:undefined,max:undefined}).directive("fittext",["$timeout","config","fitTextConfig",function($timeout,config,fitTextConfig){return{restrict:"A",scope:!0,link:function(scope,element,attrs){angular.extend(config,fitTextConfig.config),element[0].style.display="inline-block",element[0].style.whiteSpace="nowrap",element[0].style.lineHeight=attrs.fittextHeight||"1";var parent=element.parent(),compressor=attrs.fittext||1,minFontSize=attrs.fittextMin||config.min||Number.NEGATIVE_INFINITY,maxFontSize=attrs.fittextMax||config.max||Number.POSITIVE_INFINITY,resizer=function(){$timeout(function(){var ratio=element[0].offsetHeight/element[0].offsetWidth;element[0].style.fontSize=Math.max(Math.min(parent[0].offsetWidth*ratio*compressor,parseFloat(maxFontSize)),parseFloat(minFontSize))+"px"},50)};resizer(),scope.$watch(attrs.ngModel,function(){resizer()}),config.debounce?angular.element(window).bind("resize",config.debounce(function(){scope.$apply(resizer)},config.delay)):angular.element(window).bind("resize",function(){scope.$apply(resizer)})}}}]).provider("fitTextConfig",function(){var self=this;return this.config={},this.$get=function(){var extend={};return extend.config=self.config,extend},this})}(window,document,angular),angular.module("civic.security.login",["civic.security.login.form","civic.security.login.toolbar"]),function(){"use strict";function LoginFormController($scope,Security,$location){$scope.location=$location.absUrl(),$scope.cancelLogin=function(){Security.cancelLogin()}}angular.module("civic.security.login.form",[]).controller("LoginFormController",LoginFormController),LoginFormController.$inject=["$scope","Security","$location"]}(),function(){"use strict";function Security($http,$q,$location,RetryQueue,dialogs,$log,_){function redirect(url){url=url||"/",$location.path(url)}function openLoginDialog(){if(loginDialog)throw new Error("Trying to open a dialog that is already open!");loginDialog=dialogs.create("components/security/login/LoginForm.tpl.html","LoginFormController",{},"lg"),loginDialog.result.then(onLoginDialogClose)}function closeLoginDialog(success){$log.info("Security.closeLoginDialog() called."),loginDialog&&loginDialog.close(success)}function onLoginDialogClose(success){loginDialog=null,success?RetryQueue.retryAll():(RetryQueue.cancelAll(),redirect())}var loginDialog=null;RetryQueue.onItemAddedCallbacks.push(function(){RetryQueue.hasMore()&&service.showLogin()});var service={getLoginReason:function(){return RetryQueue.retryReason()},showLogin:function(){openLoginDialog()},login:function(){var request=$http.get("/api/current_user.json");return request.then(function(response){return service.currentUser=response.data.user,service.isAuthenticated()&&closeLoginDialog(!0),service.isAuthenticated()})},cancelLogin:function(){closeLoginDialog(!1),redirect()},logout:function(redirectTo){$http.get("/api/sign_out").then(function(){service.currentUser=null,redirect(redirectTo)},function(){$log.warn("COULD NOT LOG OUT")})},requestCurrentUser:function(){return service.isAuthenticated()?$q.when(service.currentUser):$http.get("/api/current_user.json").then(function(response){return service.currentUser=Object.keys(response.data).length>0?response.data:null,service.currentUser})},currentUser:null,isAuthenticated:function(){return!!service.currentUser},isAdmin:function(){return!(!service.currentUser||!_.contains(service.currentUser.roles,"admin"))}};return service}angular.module("civic.security.service",["civic.security.retryQueue","civic.security.login","dialogs.main"]).factory("Security",Security),Security.$inject=["$http","$q","$location","RetryQueue","dialogs","$log","_"]}(),function(){"use strict";function RetryQueue($q,$log){var retryQueue=[],service={onItemAddedCallbacks:[],hasMore:function(){return retryQueue.length>0},push:function(retryItem){$log.info("retryQueue.push() called with item: "+retryItem),retryQueue.push(retryItem),angular.forEach(service.onItemAddedCallbacks,function(cb){try{cb(retryItem)}catch(e){$log.error("securityRetryQueue.push(retryItem): callback threw an error"+e)}})},pushRetryFn:function(reason,retryFn){1===arguments.length&&(retryFn=reason,reason=void 0);var deferred=$q.defer(),retryItem={reason:reason,retry:function(){$q.when(retryFn()).then(function(value){deferred.resolve(value)},function(value){deferred.reject(value)})},cancel:function(){deferred.reject()}};return service.push(retryItem),deferred.promise},retryReason:function(){return service.hasMore()&&retryQueue[0].reason},cancelAll:function(){for(;service.hasMore();)retryQueue.shift().cancel()},retryAll:function(){for($log.info("RetryQueue.retryall() called.");service.hasMore();)retryQueue.shift().retry()}};return service}angular.module("civic.security.retryQueue",[]).factory("RetryQueue",RetryQueue),RetryQueue.$inject=["$q","$log"]}(),function(){"use strict";function Interceptor($injector,RetryQueue){return function(promise){return promise.then(null,function(originalResponse){return 401===originalResponse.status&&(promise=RetryQueue.pushRetryFn("unauthorized-server",function(){return $injector.get("$http")(originalResponse.config)})),promise})}}function interceptorServiceConfig($httpProvider){$httpProvider.responseInterceptors.push("Interceptor")}angular.module("civic.security.interceptor",["civic.security.retryQueue"]).factory("Interceptor",Interceptor).config(interceptorServiceConfig),Interceptor.$inject=["$injector","RetryQueue"],interceptorServiceConfig.$inject=["$httpProvider"]}(),function(){"use strict";angular.module("civic.security.authorization",["civic.security.service"]).provider("Authorization",{requireAdminUser:["Authorization",function(Authorization){return Authorization.requireAdminUser()}],requireAuthenticatedUser:["Authorization",function(Authorization){return Authorization.requireAuthenticatedUser()}],$get:["Security","RetryQueue",function(Security,RetryQueue){var service={requireAuthenticatedUser:function(){var promise=Security.requestCurrentUser().then(function(){return Security.isAuthenticated()?void 0:RetryQueue.pushRetryFn("unauthenticated-client",service.requireAuthenticatedUser)});return promise},requireAdminUser:function(){var promise=Security.requestCurrentUser().then(function(){return Security.isAdmin()?void 0:RetryQueue.pushRetryFn("unauthorized-client",service.requireAdminUser)});return promise}};return service}]})}(),function(){"use strict";function GenesService($resource,$cacheFactory,_){var cache=$cacheFactory("genesCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},Genes=$resource("/api/genes/:geneId",{geneId:"@entrez_id"},{query:{method:"GET",isArray:!0,cache:cache},queryNames:{method:"GET",isArray:!0,transformResponse:function(data){return _.uniq(_.map(JSON.parse(data),function(gene){return{entrez_name:gene.entrez_name,entrez_id:gene.entrez_id}}))},cache:cache},get:{method:"GET",isArray:!1,cache:cache},update:{method:"PUT",interceptor:cacheInterceptor}});return Genes}angular.module("civic.services").factory("Genes",GenesService),GenesService.$inject=["$resource","$cacheFactory","_"]}(),function(){"use strict";function GeneCommentsService($resource,$cacheFactory){var cache=$cacheFactory("genesCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},Genes=$resource("/api/genes/:geneId/comments/:commentId",{geneId:"@entrez_id",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return Genes}angular.module("civic.services").factory("GeneComments",GeneCommentsService),GeneCommentsService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function GenesSuggestedChangesService($resource,$cacheFactory){var cache=$cacheFactory("genesSuggestedChangesCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},genesCache=$cacheFactory.get("genesCache"),acceptCacheInterceptor={response:function(response){return genesCache.remove("/api/genes/"+response.data.entrez_id),response}},GenesSuggestedChanges=$resource("/api/genes/:geneId/suggested_changes/:suggestedChangeId",{geneId:"@entrez_id",suggestedChangeId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor},accept:{url:"/api/genes/:geneId/suggested_changes/:suggestedChangeId/accept",params:{geneId:"@geneId",suggestedChangeId:"@suggestedChangeId"},method:"POST",interceptor:acceptCacheInterceptor}});return GenesSuggestedChanges}angular.module("civic.services").factory("GenesSuggestedChanges",GenesSuggestedChangesService),GenesSuggestedChangesService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function GenesSuggestedChangesCommentsService($resource,$cacheFactory){var cache=$cacheFactory("genesSuggestedChangesCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},Genes=$resource("/api/genes/:geneId/suggested_changes/:suggestedChangeId/comments/:commentId",{geneId:"@entrez_id",suggestedChangeId:"@suggestedChangeId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return Genes}angular.module("civic.services").factory("GenesSuggestedChangesComments",GenesSuggestedChangesCommentsService),GenesSuggestedChangesCommentsService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function VariantGroupsService($resource){var cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},VariantGroups=$resource("/api/variant_groups/:variantGroupId",{variantGroupId:"id"},{query:{method:"GET",isArray:!0,cache:!0},get:{method:"GET",isArray:!1,cache:!0},update:{method:"PUT",interceptor:cacheInterceptor}});return VariantGroups}angular.module("civic.services").factory("VariantGroups",VariantGroupsService),VariantGroupsService.$inject=["$resource"]}(),function(){"use strict";function VariantGroupsCommentsService($resource,$cacheFactory){var cache=$cacheFactory("variantGroupsCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},VariantGroups=$resource("/api/variant_groups/:variantGroupId/comments/:commentId",{variantGroupId:"@variantGroupId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return VariantGroups}angular.module("civic.services").factory("VariantGroupsComments",VariantGroupsCommentsService),VariantGroupsCommentsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function VariantGroupsSuggestedChanges($resource,$cacheFactory){var cache=$cacheFactory("variantGroupsSuggestedChangesCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},variantGroupsCache=$cacheFactory.get("variantGroupsCache"),acceptCacheInterceptor={response:function(response){return variantGroupsCache.remove("/api/variant_groups/"+response.data.id),response}},VariantGroups=$resource("/api/variant_groups/:variantGroupId/suggested_changes/:suggestedChangeId",{geneId:"@variantGroupId",suggestedChangeId:"@suggestedChangeId"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor},accept:{url:"/api/variant_groups/:variantGroupId/suggested_changes/:suggestedChangeId/accept",params:{geneId:"@variantGroupId",suggestedChangeId:"@suggestedChangeId"},method:"POST",interceptor:acceptCacheInterceptor}});return VariantGroups}angular.module("civic.services").factory("VariantGroupsSuggestedChanges",VariantGroupsSuggestedChanges),VariantGroupsSuggestedChanges.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function VariantGroupsSuggestedChangesCommentsService($resource,$cacheFactory){var cache=$cacheFactory("variantGroupSuggestedChangesCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},VariantGroups=$resource("/api/variant_groups/:variantGroupId/suggested_changes/:suggestedChangeId/comments/:commentId",{variantGroupId:"@id",suggestedChangeId:"@suggestedChangeId",commentId:"@commentId"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return VariantGroups}angular.module("civic.services").factory("VariantGroupsSuggestedChangesComments",VariantGroupsSuggestedChangesCommentsService),VariantGroupsSuggestedChangesCommentsService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function VariantsService($resource,$cacheFactory){var cache=$cacheFactory("variantsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},Variants=$resource("/api/genes/:geneId/variants/:variantId",{geneId:"@geneID",variantId:"@variantId"},{get:{method:"GET",isArray:!1,cache:!0},query:{method:"GET",isArray:!0,cache:!0},update:{method:"PUT",interceptor:cacheInterceptor}});return Variants}angular.module("civic.services").factory("Variants",VariantsService),VariantsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function VariantsSuggestedChangesService($resource,$cacheFactory){var cache=$cacheFactory("variantsSuggestedChangesCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},variantsCache=$cacheFactory.get("variantsCache"),acceptCacheInterceptor={response:function(response){return variantsCache.remove("/api/genes/"+response.data.id),response}},VariantsSuggestedChanges=$resource("/api/genes/:geneId/variants/:variantId/suggested_changes/:suggestedChangeId",{geneId:"@geneId",variantId:"@variantId",suggestedChangeId:"@suggestedChangeId"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor},accept:{url:"/api/genes/:geneId/variants/:variantId/suggested_changes/:suggestedChangeId/accept",params:{variantId:"@variantId",suggestedChangeId:"@suggestedChangeId"},method:"POST",interceptor:acceptCacheInterceptor}});return VariantsSuggestedChanges}angular.module("civic.services").factory("VariantsSuggestedChanges",VariantsSuggestedChangesService),VariantsSuggestedChangesService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function VariantCommentsService($resource,$cacheFactory){var cache=$cacheFactory("variantCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},VariantComments=$resource("/api/genes/:geneId/variants/:variantId/comments/:commentId",{geneId:"@geneId",variantId:"@variantId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return VariantComments}angular.module("civic.services").factory("VariantComments",VariantCommentsService),VariantCommentsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function VariantsSuggestedChangesCommentsService($resource,$cacheFactory){var cache=$cacheFactory("variantsSuggestedChangesCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},VariantsSuggestedChangesComments=$resource("/api/genes/:geneId/variants/:variantId/suggested_changes/:suggestedChangeId/comments/:commentId",{geneId:"@geneId",variantId:"@variantId",suggestedChangeId:"@suggestedChangeId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return VariantsSuggestedChangesComments}angular.module("civic.services").factory("VariantsSuggestedChangesComments",VariantsSuggestedChangesCommentsService),VariantsSuggestedChangesCommentsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function EvidenceService($resource,$cacheFactory){var cache=$cacheFactory("evidenceCache"),interceptor={response:function(response){return cache.remove(response.config.url),$log.info("cache removed",response.config.url),response}},Evidence=$resource("/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceItemId",{geneId:"@geneId",variantId:"@variantId",evidenceItemId:"@evidenceItemId"},{query:{method:"GET",isArray:!0},get:{method:"GET",isArray:!1},update:{method:"PUT",interceptor:interceptor}});return Evidence}angular.module("civic.services").factory("Evidence",EvidenceService),EvidenceService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function EvidenceSuggestedChangesService($resource,$cacheFactory){var cache=$cacheFactory("evidenceSuggestedChangesCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},evidenceCache=$cacheFactory.get("evidenceCache"),acceptCacheInterceptor={response:function(response){return evidenceCache.remove("/api/genes/"+response.data.id),response}},EvidenceSuggestedChanges=$resource("/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceItemId/suggested_changes/:suggestedChangeId",{geneId:"@geneId",variantId:"@variantId",evidenceItemId:"@evidenceItemId",suggestedChangeId:"@suggestedChangeId"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor},accept:{url:"/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceItemId/suggested_changes/:suggestedChangeId/accept",params:{variantId:"@variantId",suggestedChangeId:"@suggestedChangeId"},method:"POST",interceptor:acceptCacheInterceptor}});return EvidenceSuggestedChanges}angular.module("civic.services").factory("EvidenceSuggestedChanges",EvidenceSuggestedChangesService),EvidenceSuggestedChangesService.$inject=["$resource","$cacheFactory","_","$log"]}(),function(){"use strict";function EvidenceCommentsService($resource,$cacheFactory){var cache=$cacheFactory("evidenceCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},EvidenceComments=$resource("/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceItemId/comments/:commentId",{geneId:"@geneId",variantId:"@variantId",evidenceItemId:"@evidenceItemId",commentId:"@commentId"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return EvidenceComments}angular.module("civic.services").factory("EvidenceComments",EvidenceCommentsService),EvidenceCommentsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";function EvidenceSuggestedChangesCommentsService($resource,$cacheFactory){var cache=$cacheFactory("evidenceSuggestedChangesCommentsCache"),cacheInterceptor={response:function(response){return cache.remove(response.config.url),response}},EvidenceSuggestedChangesComments=$resource("/api/genes/:geneId/variants/:variantId/evidence_items/:evidenceItemId/suggested_changes/:suggestedChangeId/comments/:commentId",{geneId:"@geneId",variantId:"@variantId",evidenceItemId:"@evidenceItemId",suggestedChangeId:"@suggestedChangeId",commentId:"@id"},{query:{method:"GET",isArray:!0,cache:cache},get:{method:"GET",isArray:!1,cache:cache},add:{method:"POST",interceptor:cacheInterceptor}});return EvidenceSuggestedChangesComments}angular.module("civic.services").factory("EvidenceSuggestedChangesComments",EvidenceSuggestedChangesCommentsService),EvidenceSuggestedChangesCommentsService.$inject=["$resource","$cacheFactory"]}(),function(){"use strict";angular.module("civic.services").constant("ConfigService",{serverUrl:"http://localhost:3000/",mainMenuItems:[{label:"Collaborate",state:"collaborate"},{label:"Help",state:"help"},{label:"Contact",state:"contact"}]})}(),function(){"use strict";function BrowseService($resource){var Browse=$resource("/api/variants",{},{get:{method:"GET",isArray:!1,transformResponse:function(data){var events=JSON.parse(data);return events.result=_.map(events.result,function(event){return event.diseases=event.diseases.join(", "),event}),events}},query:{method:"GET",isArray:!0}});return Browse}angular.module("civic.services").factory("Browse",BrowseService),BrowseService.$inject=["$resource"]}(),function(){"use strict";function MyGeneService($resource,$cacheFactory,_){var cache=$cacheFactory("MyGeneInfo"),MyGene=$resource("/api/genes/mygene_info_proxy/:geneId",{geneId:"@geneId"},{getDetails:{isArray:!1,cache:cache,transformResponse:function(data){data=JSON.parse(data);var link,srcMap={kegg:"http://www.genome.jp/kegg-bin/show_pathway?",reactome:"http://www.reactome.org/cgi-bin/control_panel_st_id?ST_ID=",pharmgkb:"https://www.pharmgkb.org/pathway/",humancyc:"http://humancyc.org/HUMAN/NEW-IMAGE?type=PATHWAY&object=",smpdb:"http://www.smpdb.ca/view/",pid:"http://pid.nci.nih.gov/search/pathway_landing.shtml?what=graphic&jpg=on&pathway_id=",wikipathways:"http://wikipathways.org/index.php/Pathway:",netpath:null,biocarta:null,inoh:null,signalink:null,ehmn:null},pathways=data.pathway||[],pathwaysFinal=[];for(var src in pathways){angular.isArray(pathways[src])||(pathways[src]=[pathways[src]]);for(var p in pathways[src])link=srcMap[src]+pathways[src][p].id,null===srcMap[src]&&(link=null),pathwaysFinal.push({name:pathways[src][p].name,link:link,src:src})}return data.pathway=pathwaysFinal,!_.isArray(data.alias)&&data.alias&&(data.alias=[data.alias]),!_.isArray(data.interpro)&&data.interpro&&(data.interpro=[data.interpro]),data}}});return MyGene}angular.module("civic.services").factory("MyGene",MyGeneService),MyGeneService.$inject=["$resource","$cacheFactory","_"]}(),function(){"use strict";function TitleService($rootScope,Genes,Variants,Evidence,VariantGroups,_,$q,$parse){$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams){var title="",titleScope={gene:{},variant:{},evidenceItem:{},variantGroup:{}};if(_.has(toParams,"geneId")&&titleScope.gene.entrez_id!==toParams.geneId)var genePromise=Genes.get({geneId:toParams.geneId}).$promise;if(_.has(toParams,"geneId")&&_.has(toParams,"variantId")&&titleScope.variant.id!==toParams.variantId)var variantPromise=Variants.get({geneId:toParams.geneId,variantId:toParams.variantId}).$promise;if(_.has(toParams,"variantGroupId")&&titleScope.variantGroup.id!==toParams.variantGroupId)var variantGroupsPromise=VariantGroups.get({variantGroupId:toParams.variantGroupId}).$promise;if(_.has(toParams,"geneId")&&_.has(toParams,"variantId")&&_.has(toParams,"evidenceItemId")&&titleScope.evidenceItem.id!==toParams.evidenceItemId)var evidenceItemPromise=Evidence.get({geneId:toParams.geneId,variantId:toParams.variantId,evidenceItemId:toParams.evidenceItemId}).$promise;$q.all({gene:genePromise,variant:variantPromise,evidenceItem:evidenceItemPromise,variantGroup:variantGroupsPromise}).then(function(resolutions){titleScope.gene=resolutions.gene,titleScope.variant=resolutions.variant,titleScope.evidenceItem=resolutions.evidenceItem,titleScope.variantGroup=resolutions.variantGroup,title=$parse(toState.data.titleExp)(titleScope),$rootScope.$broadcast("title:update",{newTitle:title})})})}angular.module("civic.services").service("TitleService",TitleService),TitleService.$inject=["$rootScope","Genes","Variants","Evidence","VariantGroups","_","$q","$parse"]}(),function(){"use strict";angular.module("civic.services").factory("_",["$window",function($window){return $window._}])}(),function(ng,_){"use strict";function propGetterFactory(prop){return function(obj){return obj[prop]}}var lodashModule=ng.module("angular-lodash",[]),utilsModule=ng.module("angular-lodash/utils",[]),filtersModule=ng.module("angular-lodash/filters",[]);_._=_,_.each(["min","max","sortedIndex"],function(fnName){_[fnName]=_.wrap(_[fnName],function(fn){var args=_.toArray(arguments).slice(1);return _.isString(args[2])?args[2]=propGetterFactory(args[2]):_.isString(args[1])&&(args[1]=propGetterFactory(args[1])),fn.apply(_,args)})}),ng.injector(["ng"]).invoke(["$filter",function($filter){_.filter=_.select=_.wrap($filter("filter"),function(filter,obj,exp){return _.isArray(obj)||(obj=_.toArray(obj)),filter(obj,exp)}),_.reject=function(obj,exp){if(_.isString(exp))return _.filter(obj,"!"+exp);var diff=_.bind(_.difference,_,obj);return diff(_.filter(obj,exp))}}]),_.each(_.methods(_),function(methodName){function register($rootScope){$rootScope[methodName]=_.bind(_[methodName],_)}_.each([lodashModule,utilsModule,ng.module("angular-lodash/utils/"+methodName,[])],function(module){module.run(["$rootScope",register])})});var adapList=[["map","collect"],["reduce","inject","foldl"],["reduceRight","foldr"],["find","detect"],["filter","select"],"where","findWhere","reject","invoke","pluck","max","min","sortBy","groupBy","countBy","shuffle","toArray","size",["first","head","take"],"initial","last",["rest","tail","drop"],"compact","flatten","without","union","intersection","difference",["uniq","unique"],"zip","object","indexOf","lastIndexOf","sortedIndex","keys","values","pairs","invert",["functions","methods"],"pick","omit","tap","identity","uniqueId","escape","result","template"];_.each(adapList,function(filterNames){_.isArray(filterNames)||(filterNames=[filterNames]);var filter=_.bind(_[filterNames[0]],_),filterFactory=function(){return filter};_.each(filterNames,function(filterName){_.each([lodashModule,filtersModule,ng.module("angular-lodash/filters/"+filterName,[])],function(module){module.filter(filterName,filterFactory)})})})}(angular,window._),function(){"use strict";function HomeCtrl(){}angular.module("civic.pages").controller("HomeCtrl",HomeCtrl),HomeCtrl.$inject=["$rootScope","$scope","$log"]}(),function(){"use strict";function HelpCtrl($scope){$scope.loadedMsg="Loaded Help!"}angular.module("civic.pages").controller("HelpCtrl",HelpCtrl),HelpCtrl.$inject=["$scope"]}(),function(){"use strict";function ContactCtrl($scope){$scope.loadedMsg="Loaded Contact!"}angular.module("civic.pages").controller("ContactCtrl",ContactCtrl),ContactCtrl.$inject=["$scope"]}(),function(){"use strict";function CollaborateCtrl($scope){$scope.loadedMsg="Loaded Collaborate!"}angular.module("civic.pages").controller("CollaborateCtrl",CollaborateCtrl),CollaborateCtrl.$inject=["$scope"]}(),function(){"use strict";function titleDirective($rootScope,$timeout){var directive={restrict:"E",link:function(){var listener=function(event,data){$timeout(function(){$rootScope.title="undefined"!=typeof data.newTitle?"CIViC: "+data.newTitle:"CIViC - Clinincal Interpretation of Variants in Cancer"})};$rootScope.$on("title:update",listener)}};return directive}angular.module("civic.common").directive("title",titleDirective),titleDirective.$inject=["$rootScope","$timeout","TitleService"]}(),function(){"use strict";function subheader(){var directive={restrict:"E",scope:!0,templateUrl:"components/directives/subheader.tpl.html",controller:SubheaderCtrl};return directive}function SubheaderCtrl($scope,$rootScope){$rootScope.$on("title:update",function(event,data){$scope.view.stateTitle=data.newTitle})}angular.module("civic.common").directive("subheader",subheader).controller("SubheaderCtrl",SubheaderCtrl),SubheaderCtrl.$inject=["$scope","$rootScope"]}(),angular.module("civic.common").directive("sessionInfo",sessionInfo),sessionInfo.$inject=["ConfigService"],function(){"use strict";function quickSearchCtrl($scope,$log,$http,$state,_){$scope.getVariants=function(val){return $http.get("/api/variants?filter[entrez_gene]="+val).then(function(data){return _.map(data.data.result,function(event){return{gene:event.entrez_id,label:event.entrez_gene+" / "+event.variant,variant:event.variant,variant_id:event.variant_id}})})},$scope.onSelect=function($item){$state.go("events.genes.summary.variants.summary",{geneId:$item.gene,variantId:$item.variant_id})}}function quickSearch(){var directive={templateUrl:"components/directives/quickSearch.tpl.html",restrict:"E",scope:!0,controller:quickSearchCtrl};return directive}angular.module("civic.common").directive("quickSearch",quickSearch).controller("quickSearchCtrl",quickSearchCtrl),quickSearchCtrl.$inject=["$scope","$log","$http","$state","_"]}(),function(){"use strict";function mainMenu(){var directive={restrict:"E",templateUrl:"components/directives/mainMenu.tpl.html",replace:!0,scope:!0,controller:mainMenuController};return directive}function mainMenuController($scope,ConfigService){$scope.menuItems=ConfigService.mainMenuItems}angular.module("civic.common").directive("mainMenu",mainMenu),mainMenuController.$inject=["$scope","ConfigService"]}(),function(){"use strict";function headerSearch(){return{restrict:"E",templateUrl:"components/directives/headerSearch.tpl.html",controller:headerSearch}}angular.module("civic.common").directive("headerSearch",headerSearch)}(),function(){"use strict";function civicLogo(){var directive={restrict:"E",templateUrl:"components/directives/civicLogo.tpl.html",controller:civicLogoController};return directive}function civicLogoController($scope,$rootScope){$scope.navMode=$rootScope.navMode,$scope.pageTitle=$rootScope.pageTitle}angular.module("civic.common").directive("civicLogo",civicLogo),civicLogoController.$inject=["$scope","$rootScope"]}(),function(){"use strict";function loginToolbar(Security){var directive={templateUrl:"components/directives/loginToolbar.tpl.html",restrict:"E",replace:!0,scope:!0,link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.login=Security.showLogin,$scope.logout=Security.logout,$scope.$watch(function(){return Security.currentUser},function(currentUser){$scope.currentUser=currentUser}),$scope.status={isopen:!1},$scope.toggleDropdown=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.status.isopen=!$scope.status.isopen}},controller:function($scope,$location){$scope.currentUrl=$location.url()}};return directive}angular.module("civic.security.login.toolbar",[]).directive("loginToolbar",loginToolbar),loginToolbar.$inject=["Security"]}(),function(){"use strict";function BrowseCtrl($scope,$rootScope,uiGridConstants,uiGridSelectionService,Browse,$state,_,$log){$scope.events={},$scope.browseGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,rowTemplate:"app/views/browse/browseGridRow.tpl.html",columnDefs:[{name:"entrez_gene",sort:{direction:uiGridConstants.ASC},enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}},{name:"variant",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}},{name:"diseases",displayName:"Diseases",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}},{name:"evidence_item_count",displayName:"Evidence Item Count",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}}],minRowsToShow:20},$scope.gridInteractions={rowClick:function(row){$log.info(["geneID:",row.entity.entrez_id,"variantId:",row.entity.variant_id].join(" ")),$state.go("events.genes.summary.variants.summary",{geneId:row.entity.entrez_id,variantId:row.entity.variant_id})}},Browse.get({count:200},function(data){$scope.browseGridOptions.data=data.result,$scope.events=data})}function ceilFilter(){return function(num){return Math.ceil(num)}}angular.module("civic.browse").controller("BrowseCtrl",BrowseCtrl).filter("ceil",ceilFilter),BrowseCtrl.$inject=["$scope","$rootScope","uiGridConstants","uiGridSelectionService","Browse","$state","_","$log"]}(),function(){"use strict";function variantsMenu(){var directive={restrict:"E",templateUrl:"app/views/events/common/variantsMenu.tpl.html",replace:!0,scope:!0};return directive}angular.module("civic.events").directive("variantsMenu",variantsMenu)}(),function(){"use strict";function GenesViewCtrl($scope,gene,geneDetails,Genes,$stateParams){$scope.gene=gene,$scope.geneDetails=geneDetails,$scope.variantGroupsExist=_.has(gene,"variant_groups")&&gene.variant_groups.length>0,$scope.refreshGene=function(){$scope.gene=Genes.get({geneId:$stateParams.geneId})
}}angular.module("civic.events").controller("GenesViewCtrl",GenesViewCtrl),GenesViewCtrl.$inject=["$scope","gene","geneDetails","Genes","$stateParams"]}(),function(){"use strict";function geneTabs(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTabs.tpl.html",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}angular.module("civic.events").directive("geneTabs",geneTabs),geneTabs.$inject=["Security"]}(),function(){"use strict";function geneEdit(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneEdit.tpl.html",controller:"GeneEditCtrl as GeneEdit",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function GeneEditCtrl($log,$parse,$scope,$stateParams,_,Genes,GenesSuggestedChanges){$scope.geneEdit=Genes.get({geneId:$stateParams.geneId}),$scope.genesSuggestedChanges=GenesSuggestedChanges.query({geneId:$stateParams.geneId}),$scope.newChange={},$scope.formStatus={errors:[],messages:[]},$scope.submitEdits=function(){$log.info("submitEdits called."),GenesSuggestedChanges.add({entrez_id:$stateParams.geneId,description:$scope.geneEdit.description,comment:{title:"Reasons for Edit",text:$scope.geneEdit.reason}},function(response){$log.info("Gene SubmitEdits update successful."),$scope.formStatus.errors=[],$scope.formStatus.messages=[];var messageExp='"Your edit suggestions for Gene " + gene.entrez_name + " have been added to the review queue."';$scope.formStatus.messages.push($parse(messageExp)($scope)),$scope.newChange=response.data},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})},$scope.discardEdits=function(){$log.info("discardEdits called.")},$scope.applyEdits=function(){$scope.geneEdit.$update({description:$scope.geneEdit.description,comment:{title:"Reasons for Edit",text:"Admin applied edit reason: "+$scope.geneEdit.reason}},function(){$log.info("update successful."),$scope.$parent.gene=Genes.get({geneId:$stateParams.geneId}),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Gene "+$scope.geneEdit.entrez_name+" updated successfully.")},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this gene."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:"There was a server error."}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("geneEdit",geneEdit).controller("GeneEditCtrl",GeneEditCtrl),geneEdit.$inject=["Security"],GeneEditCtrl.$inject=["$log","$parse","$scope","$stateParams","_","Genes","GenesSuggestedChanges"]}(),function(){"use strict";function geneSummary(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneSummary.tpl.html"};return directive}angular.module("civic.events").directive("geneSummary",geneSummary)}(),function(){"use strict";function myGeneInfo(){var directive={restrict:"E",replace:!0,controller:"MyGeneInfoCtrl",templateUrl:"app/views/events/genes/directives/myGeneInfo.tpl.html"};return directive}function MyGeneInfoCtrl($scope,dialogs){$scope.viewGeneDetails=function(){$scope.dlg=dialogs.create("app/views/events/genes/directives/myGeneInfoDialog.tpl.html","MyGeneInfoDialogCtrl",$scope.geneDetails,"lg")}}function MyGeneInfoDialogCtrl($scope,uiGridConstants,$modalInstance,data){$scope.proteinDomainsGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,columnDefs:[{name:"desc",displayName:"Protein Domains",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS},width:"50%"},{name:"id",displayName:"ID",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS},width:"15%"},{name:"short_desc",displayName:"Identifier",filter:{condition:uiGridConstants.filter.CONTAINS},enableFiltering:!0}]},$scope.proteinDomainsGridOptions.data=data.interpro,$scope.pathwaysGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,minRowsToShow:7,filter:{condition:uiGridConstants.filter.CONTAINS},columnDefs:[{name:"name",displayName:"Pathways",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS},width:"50%"},{name:"src",displayName:"Source",enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS},width:"15%"},{name:"link",displayName:"Link",filter:{condition:uiGridConstants.filter.CONTAINS},enableFiltering:!0}]},$scope.pathwaysGridOptions.data=data.pathway,$scope.geneDetails=data,$scope.done=function(){$modalInstance.close($scope.data)}}angular.module("civic.events").directive("myGeneInfo",myGeneInfo).controller("MyGeneInfoCtrl",MyGeneInfoCtrl).controller("MyGeneInfoDialogCtrl",MyGeneInfoDialogCtrl),MyGeneInfoCtrl.$inject=["$scope","dialogs"],MyGeneInfoDialogCtrl.$inject=["$scope","uiGridConstants","$modalInstance","data"]}(),function(){"use strict";function geneTalk(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalk.tpl.html",controller:"GeneTalkController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function GeneTalkController($scope,$stateParams,GenesSuggestedChanges){GenesSuggestedChanges.query({geneId:$stateParams.geneId}).$promise.then(function(response){var statusGroupsOrdered={},statusOrder=["active","new","applied","closed"],statusGroups=_.groupBy(_.sortBy(response,"created_at"),"status");_.each(statusOrder,function(status){_.has(statusGroups,status)&&(statusGroupsOrdered[status]=statusGroups[status])}),$scope.statusOrder=statusOrder,$scope.statusGroups=statusGroupsOrdered})}angular.module("civic.events").directive("geneTalk",geneTalk).controller("GeneTalkController",GeneTalkController),GeneTalkController.$inject=["$scope","$stateParams","GenesSuggestedChanges","$log"]}(),function(){"use strict";function geneTalkChange(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkChange.tpl.html",controller:"GeneTalkChangeController"};return directive}function GeneTalkChangeController($scope,Security,$stateParams,GenesSuggestedChanges,GenesSuggestedChangesComments,Genes,$log){$scope.auth={isAuthenticated:Security.isAuthenticated,isAdmin:Security.isAdmin},$log.info("Requesting change:"+$stateParams.geneId+"suggestedChangeId: "+$stateParams.suggestedChangeId),GenesSuggestedChanges.get({geneId:$stateParams.geneId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$scope.suggestedChange=response}),GenesSuggestedChangesComments.query({geneId:$stateParams.geneId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$scope.changeComments=response}),$scope.commitChange=function(){GenesSuggestedChanges.accept({geneId:$stateParams.geneId,suggestedChangeId:$stateParams.suggestedChangeId,force:!0}).$promise.then(function(){$log.info("suggested change updated!!"),Genes.get({geneId:$stateParams.geneId}).$promise.then(function(gene){$scope.$parent.$parent.gene=gene})},function(){$log.info("suggested change failed!!")})}}angular.module("civic.events").directive("geneTalkChange",geneTalkChange).controller("GeneTalkChangeController",GeneTalkChangeController),GeneTalkChangeController.$inject=["$scope","Security","$stateParams","GenesSuggestedChanges","GenesSuggestedChangesComments","Genes","$log"]}(),function(){"use strict";function geneTalkComments(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkComments.tpl.html",controller:"GeneTalkCommentsController"};return directive}function GeneTalkCommentsController(Security,$scope,$stateParams,GeneComments,$log){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin,$log.info("GeneTalkCommentsController instantiated."),GeneComments.query({geneId:$scope.gene.entrez_id}).$promise.then(function(response){$scope.comments=response})}angular.module("civic.events").directive("geneTalkComments",geneTalkComments).controller("GeneTalkCommentsController",GeneTalkCommentsController),GeneTalkCommentsController.$inject=["Security","$scope","$stateParams","GeneComments","$log"]}(),function(){"use strict";function geneTalkAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkAddComment.tpl.html",controller:"GeneTalkAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function GeneTalkAddCommentController($scope,$stateParams,GeneComments,$log){$log.info("GeneTalkAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId),GeneComments.add({entrez_id:$stateParams.geneId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Your comment was added."),GeneComments.query({geneId:$scope.gene.entrez_id}).$promise.then(function(response){$scope.$parent.comments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("geneTalkAddComment",geneTalkAddComment).controller("GeneTalkAddCommentController",GeneTalkAddCommentController),GeneTalkAddCommentController.$inject=["$scope","$stateParams","GeneComments","$log"]}(),function(){"use strict";function geneTalkChangeAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/genes/directives/geneTalkChangeAddComment.tpl.html",controller:"GeneTalkChangeAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function GeneTalkChangeAddCommentController($scope,$stateParams,GenesSuggestedChangesComments,$log){$log.info("GeneTalkChangeAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId+" suggestedChangeId: "+$stateParams.suggestedChangeId),GenesSuggestedChangesComments.add({entrez_id:$stateParams.geneId,suggestedChangeId:$stateParams.suggestedChangeId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.comment="",$scope.formStatus.messages.push("Your comment was added."),GenesSuggestedChangesComments.query({geneId:$scope.gene.entrez_id,suggestedChangeId:$scope.suggestedChange.id}).$promise.then(function(response){$scope.$parent.changeComments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("geneTalkChangeAddComment",geneTalkChangeAddComment).controller("GeneTalkChangeAddCommentController",GeneTalkChangeAddCommentController),GeneTalkChangeAddCommentController.$inject=["$scope","$stateParams","GenesSuggestedChangesComments","$log"]}(),function(){"use strict";function VariantGroupsCtrl($scope,VariantGroups,variantGroup){$scope.variantGroup=variantGroup}angular.module("civic.events").controller("VariantGroupsCtrl",VariantGroupsCtrl),VariantGroupsCtrl.$inject=["$scope","VariantGroups","variantGroup","$stateParams","$log"]}(),function(){"use strict";function variantGroupTabs(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupTabs.tpl.html",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}angular.module("civic.events").directive("variantGroupTabs",variantGroupTabs),variantGroupTabs.$inject=["Security"]}(),function(){"use strict";function variantGroupSummary(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupSummary.tpl.html",link:function($scope){console.info("-------- variantGroupSummary linked."),$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}angular.module("civic.events").directive("variantGroupSummary",variantGroupSummary),variantGroupSummary.$inject=["Security"]}(),function(){"use strict";function variantGroupEdit(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupEdit.tpl.html",controller:"VariantGroupEditCtrl as VariantGroupEdit",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantGroupEditCtrl($log,$parse,$scope,$stateParams,_,VariantGroups,VariantGroupsSuggestedChanges){$log.info("----- VariantGroupEditCtrl loaded."),$scope.variantGroupEdit=VariantGroups.get({variantGroupId:$stateParams.variantGroupId}),$scope.genesSuggestedChanges=VariantGroupsSuggestedChanges.query({variantGroupId:$stateParams.variantGroupId}),$scope.newChange={},$scope.formStatus={errors:[],messages:[]},$scope.submitEdits=function(){$log.info("VariantGroups submitEdits called."),VariantGroupsSuggestedChanges.add({entrez_id:$stateParams.variantGroupId,description:$scope.variantGroupEdit.description,comment:{title:"Reasons for Edit",text:$scope.variantGroupEdit.reason}},function(response){$log.info("VariantGroups SubmitEdits update successful."),$scope.formStatus.errors=[],$scope.formStatus.messages=[];var messageExp='"Your edit suggestions for VariantGroup " + variantGroup.name + " have been added to the review queue."';$scope.formStatus.messages.push($parse(messageExp)($scope)),$scope.newChange=response.data},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})},$scope.discardEdits=function(){$log.info("discardEdits called.")},$scope.applyEdits=function(){$scope.variantGroupEdit.$update({description:$scope.variantGroupEdit.description,comment:{title:"Reasons for Edit",text:"Admin applied edit reason: "+$scope.variantGroupEdit.reason}},function(){$log.info("update successful."),$scope.$parent.gene=VariantGroups.get({variantGroupId:$stateParams.variantGroupId}),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Gene "+$scope.variantGroupEdit.entrez_name+" updated successfully.")},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this gene."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:"There was a server error."}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantGroupEdit",variantGroupEdit).controller("VariantGroupEditCtrl",VariantGroupEditCtrl),variantGroupEdit.$inject=["Security"],VariantGroupEditCtrl.$inject=["$log","$parse","$scope","$stateParams","_","VariantGroups","VariantGroupsSuggestedChanges"]}(),function(){"use strict";function variantGroupTalk(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupTalk.tpl.html",controller:"VariantGroupTalkCtrl",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantGroupTalkCtrl($scope,$stateParams,VariantGroupsSuggestedChanges){VariantGroupsSuggestedChanges.query({variantGroupId:$stateParams.variantGroupId}).$promise.then(function(response){var statusGroupsOrdered={},statusOrder=["active","new","applied","closed"],statusGroups=_.groupBy(_.sortBy(response,"created_at"),"status");_.each(statusOrder,function(status){_.has(statusGroups,status)&&(statusGroupsOrdered[status]=statusGroups[status])}),$scope.statusOrder=statusOrder,$scope.statusGroups=statusGroupsOrdered})}angular.module("civic.events").directive("variantGroupTalk",variantGroupTalk).controller("VariantGroupTalkCtrl",VariantGroupTalkCtrl),VariantGroupTalkCtrl.$inject=["$scope","$stateParams","VariantGroupsSuggestedChanges","$log"]}(),function(){"use strict";function variantGroupTalkComments(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupTalkComments.tpl.html",controller:"VariantGroupTalkCommentsController"};return directive}function VariantGroupTalkCommentsController(Security,$scope,VariantGroupsComments,$log){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin,$log.info("VariantGroupTalkCommentsController instantiated."),VariantGroupsComments.query({variantGroupId:$scope.variantGroup.id}).$promise.then(function(response){$scope.comments=response})}angular.module("civic.events").directive("variantGroupTalkComments",variantGroupTalkComments).controller("VariantGroupTalkCommentsController",VariantGroupTalkCommentsController),VariantGroupTalkCommentsController.$inject=["Security","$scope","VariantGroupsComments","$log"]}(),function(){"use strict";function variantGroupTalkAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupTalkAddComment.tpl.html",controller:"VariantGroupTalkAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantGroupTalkAddCommentController($scope,$stateParams,VariantGroupsComments,$log){$log.info("VariantGroupTalkAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. variantGroupId: "+$stateParams.variantGroupId),VariantGroupsComments.add({entrez_id:$stateParams.geneId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Your comment was added."),VariantGroupsComments.query({geneId:$scope.gene.entrez_id}).$promise.then(function(response){$scope.$parent.comments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"404 Page Not Found",errorMsg:"Service requested a URL that does not exist."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantGroupTalkAddComment",variantGroupTalkAddComment).controller("VariantGroupTalkAddCommentController",VariantGroupTalkAddCommentController),VariantGroupTalkAddCommentController.$inject=["$scope","$stateParams","VariantGroupsComments","$log"]}(),function(){"use strict";function variantGroupTalkChangeAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variantGroups/directives/variantGroupTalkChangeAddComment.tpl.html",controller:"VariantGroupTalkChangeAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantGroupTalkChangeAddCommentController($scope,$stateParams,VariantGroupsSuggestedChangesComments,$log){$log.info("VariantGroupTalkChangeAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId+" suggestedChangeId: "+$stateParams.suggestedChangeId),VariantGroupsSuggestedChangesComments.add({entrez_id:$stateParams.geneId,suggestedChangeId:$stateParams.suggestedChangeId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.comment="",$scope.formStatus.messages.push("Your comment was added."),VariantGroupsSuggestedChangesComments.query({geneId:$scope.gene.entrez_id,suggestedChangeId:$scope.suggestedChange.id}).$promise.then(function(response){$scope.$parent.changeComments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Route not found.",errorMsg:"VariantGroupsSuggestedChangesComments service requested an invalid URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantGroupTalkChangeAddComment",variantGroupTalkChangeAddComment).controller("VariantGroupTalkChangeAddCommentController",VariantGroupTalkChangeAddCommentController),VariantGroupTalkChangeAddCommentController.$inject=["$scope","$stateParams","VariantGroupsSuggestedChangesComments","$log"]}(),function(){"use strict";function VariantsViewCtrl($scope,$state,$stateParams,Variants){$scope.variant={},$stateParams.variantId?$scope.variant=Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}):$state.go("events.genes.summary",{geneId:$stateParams.geneId})}angular.module("civic.events").controller("VariantsViewCtrl",VariantsViewCtrl),VariantsViewCtrl.$inject=["$scope","$state","$stateParams","Variants"]}(),function(){"use strict";function evidenceGrid(){var directive={restrict:"E",replace:!0,scope:!1,templateUrl:"app/views/events/variants/directives/evidenceGrid.tpl.html",controller:"EvidenceGridCtrl"};return directive}function EvidenceGridCtrl($scope,uiGridConstants,$stateParams,$state,$timeout,$log,_){$scope.evidenceGridOptions={enableFiltering:!0,enableColumnMenus:!1,enableSorting:!0,enableRowSelection:!0,enableRowHeaderSelection:!1,multiSelect:!1,modifierKeysToMultiSelect:!1,noUnselect:!0,rowTemplate:"app/views/events/variants/directives/evidenceGridRow.tpl.html",columnDefs:[{name:"text",displayName:"Supporting Evidence",enableFiltering:!0,allowCellFocus:!1,width:"50%",filter:{condition:uiGridConstants.filter.CONTAINS},cellTemplate:"app/views/events/variants/directives/evidenceGridEvidenceCell.tpl.html"},{name:"disease",displayName:"Disease",allowCellFocus:!1,enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}},{name:"drug",displayName:"Drug",allowCellFocus:!1,enableFiltering:!0,filter:{condition:uiGridConstants.filter.CONTAINS}},{name:"evidence_level",displayName:"Level",allowCellFocus:!1,enableFiltering:!0,width:"8%",cellTemplate:"app/views/events/variants/directives/evidenceGridLevelCell.tpl.html"},{name:"rating",displayName:"Rating",allowCellFocus:!1,enableFiltering:!1,sort:{direction:uiGridConstants.ASC},width:"15%",cellTemplate:"app/views/events/variants/directives/evidenceGridRatingCell.tpl.html"}],minRowsToShow:7},$scope.evidenceGridOptions.onRegisterApi=function(gridApi){$scope.gridApi=gridApi,gridApi.selection.on.rowSelectionChanged($scope,function(row){$state.go("events.genes.summary.variants.summary.evidence.summary",{geneId:$scope.gene.entrez_id,variantId:$scope.variant.id,evidenceItemId:row.entity.id})}),$scope.variant.$promise.then(function(variant){if($scope.evidenceGridOptions.data=variant.evidence_items,_.has($stateParams,"evidenceItemId")){var rowEntity=_.find(variant.evidence_items,function(item){return item.id==$stateParams.evidenceItemId});$timeout(function(){gridApi.selection.selectRow(rowEntity),gridApi.cellNav.scrollTo(gridApi.grid,$scope,rowEntity,$scope.evidenceGridOptions.columnDefs[0])},500)}})}}function ceilFilter(){return function(num){return Math.ceil(num)}}angular.module("civic.events").directive("evidenceGrid",evidenceGrid).controller("EvidenceGridCtrl",EvidenceGridCtrl).filter("ceil",ceilFilter),EvidenceGridCtrl.$inject=["$scope","uiGridConstants","$stateParams","$state","$timeout","$log","_"]}(),function(){"use strict";function variantSummary(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantSummary.tpl.html"};return directive}angular.module("civic.events").directive("variantSummary",variantSummary)}(),function(){"use strict";function variantTabs(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTabs.tpl.html",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated}};return directive}angular.module("civic.events").directive("variantTabs",variantTabs),variantTabs.$inject=["Security"]}(),function(){"use strict";function variantTalk(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalk.tpl.html",controller:"VariantTalkController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantTalkController($scope,$stateParams,VariantsSuggestedChanges){VariantsSuggestedChanges.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId}).$promise.then(function(response){var statusGroupsOrdered={},statusOrder=["active","new","applied","closed"],statusGroups=_.groupBy(_.sortBy(response,"created_at"),"status");_.each(statusOrder,function(status){_.has(statusGroups,status)&&(statusGroupsOrdered[status]=statusGroups[status])}),$scope.statusOrder=statusOrder,$scope.statusGroups=statusGroupsOrdered})}angular.module("civic.events").directive("variantTalk",variantTalk).controller("VariantTalkController",VariantTalkController),VariantTalkController.$inject=["$scope","$stateParams","VariantsSuggestedChanges","$log"]}(),function(){"use strict";function variantEdit(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantEdit.tpl.html",controller:"VariantEditCtrl as VariantEdit",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantEditCtrl($log,$parse,$scope,$stateParams,_,Variants,VariantsSuggestedChanges){$scope.variantEdit=Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}),$scope.variantsSuggestedChanges=VariantsSuggestedChanges.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId}),$scope.newChange={},$scope.formStatus={errors:[],messages:[]},$scope.submitEdits=function(){$log.info("submitEdits called.geneId: "+$stateParams.geneId+"variantId: "+$stateParams.variantId),VariantsSuggestedChanges.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,description:$scope.variantEdit.description,comment:{title:"Reasons for Edit",text:$scope.variantEdit.reason}},function(response){$log.info("Variant SubmitEdits update successful."),$scope.formStatus.errors=[],$scope.formStatus.messages=[];var messageExp='"Your edit suggestions for Variant " + variant.name + " have been added to the review queue."';$scope.formStatus.messages.push($parse(messageExp)($scope)),$scope.newChange=response.data},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Route not found",errorMsg:"Service requested invalid URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)
}};handleError[response.status](response)})},$scope.discardEdits=function(){$log.info("discardEdits called.")},$scope.applyEdits=function(){$scope.variantEdit.$update({geneId:$stateParams.geneId,variantId:$stateParams.variantId,description:$scope.variantEdit.description,comment:{title:"Reasons for Edit",text:"Admin applied edit reason: "+$scope.variantEdit.reason}},function(){$log.info("update successful."),$scope.$parent.variant=Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Variant "+$scope.variantEdit.name+" updated successfully.")},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this gene."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Route not found",errorMsg:"Service requested invalid URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:"There was a server error."}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantEdit",variantEdit).controller("VariantEditCtrl",VariantEditCtrl),variantEdit.$inject=["Security"],VariantEditCtrl.$inject=["$log","$parse","$scope","$stateParams","_","Variants","VariantsSuggestedChanges"]}(),function(){"use strict";function variantTalkComments(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalkComments.tpl.html",controller:"VariantTalkCommentsController"};return directive}function VariantTalkCommentsController(Security,$scope,$stateParams,VariantComments,$log){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin,$log.info("VariantTalkCommentsController instantiated."),VariantComments.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId}).$promise.then(function(response){$scope.comments=response})}angular.module("civic.events").directive("variantTalkComments",variantTalkComments).controller("VariantTalkCommentsController",VariantTalkCommentsController),VariantTalkCommentsController.$inject=["Security","$scope","$stateParams","VariantComments","$log"]}(),function(){"use strict";function variantTalkAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalkAddComment.tpl.html",controller:"VariantTalkAddCommentController",link:function($scope,Security){console.log("======== variantTalkAddComment linked."),$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantTalkAddCommentController($scope,$stateParams,VariantComments,$log){$log.info("VariantTalkAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId),VariantComments.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Your comment was added."),VariantComments.query({geneId:$scope.gene.entrez_id,variantId:$scope.variant.id}).$promise.then(function(response){$scope.$parent.comments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Invalid Route",errorMsg:"CIViC client requested a URL that does not exist."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantTalkAddComment",variantTalkAddComment).controller("VariantTalkAddCommentController",VariantTalkAddCommentController),VariantTalkAddCommentController.$inject=["$scope","$stateParams","VariantComments","$log"]}(),function(){"use strict";function variantTalkChange(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalkChange.tpl.html",controller:"VariantTalkChangeController",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantTalkChangeController($scope,$stateParams,VariantsSuggestedChanges,VariantsSuggestedChangesComments,Variants,$log){$log.info("Requesting change:"+$stateParams.geneId+"suggestedChangeId: "+$stateParams.suggestedChangeId),VariantsSuggestedChanges.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$scope.suggestedChange=response}),VariantsSuggestedChangesComments.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$scope.changeComments=response},function(){$log.error("FAILED TO LOAD VARIANT CHANGE COMMENTS")}),$scope.commitChange=function(){VariantsSuggestedChanges.accept({geneId:$stateParams.geneId,variantId:$stateParams.variantId,suggestedChangeId:$stateParams.suggestedChangeId,force:!0}).$promise.then(function(){$log.info("suggested change updated!!"),Variants.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId}).$promise.then(function(variant){$scope.$parent.variant=variant})},function(){$log.info("suggested change failed!!")})}}angular.module("civic.events").directive("variantTalkChange",variantTalkChange).controller("VariantTalkChangeController",VariantTalkChangeController),variantTalkChange.$inject=["Security"],VariantTalkChangeController.$inject=["$scope","$stateParams","VariantsSuggestedChanges","VariantsSuggestedChangesComments","Variants","$log"]}(),function(){"use strict";function variantTalkChangeAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/variants/directives/variantTalkChangeAddComment.tpl.html",controller:"VariantTalkChangeAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function VariantTalkChangeAddCommentController($scope,$stateParams,VariantsSuggestedChangesComments,$log){$log.info("VariantTalkChangeAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId+" variantId: "+$stateParams.variantId+" suggestedChangeId: "+$stateParams.suggestedChangeId),VariantsSuggestedChangesComments.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,suggestedChangeId:$stateParams.suggestedChangeId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.comment="",$scope.formStatus.messages.push("Your comment was added."),VariantsSuggestedChangesComments.query({geneId:$scope.gene.entrez_id,variantId:$scope.variant.id,suggestedChangeId:$scope.suggestedChange.id}).$promise.then(function(response){$scope.$parent.changeComments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Unknown Route",errorMsg:"The CIViC service requested an invalid URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("variantTalkChangeAddComment",variantTalkChangeAddComment).controller("VariantTalkChangeAddCommentController",VariantTalkChangeAddCommentController),VariantTalkChangeAddCommentController.$inject=["$scope","$stateParams","VariantsSuggestedChangesComments","$log"]}(),function(){"use strict";function EvidenceViewCtrl($log,$rootScope,$scope,$state,$stateParams,Evidence){$scope.evidence={},$stateParams.evidenceItemId?$scope.evidence=Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}):$state.go("events.genes.summary.variants.summary",{geneId:$stateParams.geneId,variantId:$stateParams.variantId})}angular.module("civic.events").controller("EvidenceViewCtrl",EvidenceViewCtrl),EvidenceViewCtrl.$inject=["$log","$rootScope","$scope","$state","$stateParams","Evidence"]}(),function(){"use strict";function evidenceSummary(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceSummary.tpl.html"};return directive}angular.module("civic.events").directive("evidenceSummary",evidenceSummary)}(),function(){"use strict";function evidenceTabs(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTabs.tpl.html",controller:EvidenceTabsCtrl};return directive}function EvidenceTabsCtrl($scope,Security){$scope.isAuthenticated=Security.isAuthenticated}angular.module("civic.events").directive("evidenceTabs",evidenceTabs).controller("EvidenceTabsCtrl",EvidenceTabsCtrl),EvidenceTabsCtrl.$inject=["$scope","Security"]}(),function(){"use strict";function evidenceTalk(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalk.tpl.html",controller:"EvidenceTalkController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function EvidenceTalkController($scope,$stateParams,EvidenceSuggestedChanges){EvidenceSuggestedChanges.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}).$promise.then(function(response){var statusGroupsOrdered={},statusOrder=["active","new","applied","closed"],statusGroups=_.groupBy(_.sortBy(response,"created_at"),"status");_.each(statusOrder,function(status){_.has(statusGroups,status)&&(statusGroupsOrdered[status]=statusGroups[status])}),$scope.statusOrder=statusOrder,$scope.statusGroups=statusGroupsOrdered})}angular.module("civic.events").directive("evidenceTalk",evidenceTalk).controller("EvidenceTalkController",EvidenceTalkController),EvidenceTalkController.$inject=["$scope","$stateParams","EvidenceSuggestedChanges"]}(),function(){"use strict";function evidenceTalkChange(Security){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalkChange.tpl.html",controller:"EvidenceTalkChangeController",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function EvidenceTalkChangeController($scope,$stateParams,EvidenceSuggestedChanges,EvidenceSuggestedChangesComments,Evidence,$log){$log.info("Requesting change:"+$stateParams.geneId+"suggestedChangeId: "+$stateParams.suggestedChangeId),EvidenceSuggestedChanges.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$log.info("Fetched evidence suggested change"),$scope.suggestedChange=response},function(response){$log.info("Failed to fetch evience suggested change: "+response.data)}),EvidenceSuggestedChangesComments.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$log.info("Loaded evidence talk change comments."),$scope.changeComments=response},function(){$log.error("FAILED TO LOAD EVIDENCE CHANGE COMMENTS")}),$scope.commitChange=function(){EvidenceSuggestedChanges.accept({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId,force:!0}).$promise.then(function(){$log.info("suggested change updated!!"),Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(evidenceItem){$scope.$parent.evidence=evidenceItem})},function(){$log.info("suggested change failed!!")})}}angular.module("civic.events").directive("evidenceTalkChange",evidenceTalkChange).controller("EvidenceTalkChangeController",EvidenceTalkChangeController),evidenceTalkChange.$inject=["Security"],EvidenceTalkChangeController.$inject=["$scope","$stateParams","EvidenceSuggestedChanges","EvidenceSuggestedChangesComments","Evidence","$log"]}(),function(){"use strict";function evidenceEdit(Security){var directive={restrict:"E",replace:!0,controller:"EvidenceEditCtrl",templateUrl:"app/views/events/evidence/directives/evidenceEdit.tpl.html",link:function($scope){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function EvidenceEditCtrl($scope,$stateParams,Evidence,EvidenceSuggestedChanges,_,$parse,$log){$scope.evidenceEdit=Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}),$scope.formStatus={errors:[],messages:[]},$scope.submitEdits=function(){$log.info("evidenceEdit.submitEdits called.geneId: "+$stateParams.geneId+"variantId: "+$stateParams.variantId+"evidenceItemId: "+$stateParams.evidenceItemId),EvidenceSuggestedChanges.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,text:$scope.evidenceEdit.text,comment:{title:"Reasons for Edit",text:$scope.evidenceEdit.reason}},function(response){$log.info("Evidence SubmitEdits update successful."),$scope.formStatus.errors=[],$scope.formStatus.messages=[];var messageExp='"Your edit suggestions for Evidence" + evidence.name + " have been added to the review queue."';$scope.formStatus.messages.push($parse(messageExp)($scope)),$scope.newChange=response.data},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Route not found",errorMsg:"Service requested invalid route URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})},$scope.discardEdits=function(){$log.info("discardEdits() called.")},$scope.applyEdits=function(){$log.info("applyEdits() called.  geneId: "+$stateParams.geneId+" variantId: "+$stateParams.variantId+" evidenceItemId: "+$stateParams.evidenceItemId),$scope.evidenceEdit.$update({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,text:$scope.evidenceEdit.text},function(){$log.info("update successful."),$scope.$parent.evidence=Evidence.get({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Evidence Item"+$scope.evidence.id+" updated successfully.")},function(response){$log.info("update unsuccessful."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to edit this evidence item."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Resource Not Found",errorMsg:"This resource could not be located to be updated."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})}};handleError[response.status](response)})}}angular.module("civic.events").directive("evidenceEdit",evidenceEdit).controller("EvidenceEditCtrl",EvidenceEditCtrl),evidenceEdit.$inject=["Security"],EvidenceEditCtrl.$inject=["$scope","$stateParams","Evidence","EvidenceSuggestedChanges","_","$parse","$log"]}(),function(){"use strict";function evidenceTalkComments(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalkComments.tpl.html",controller:"EvidenceTalkCommentsController"};return directive}function EvidenceTalkCommentsController(Security,$scope,$stateParams,EvidenceComments,$log){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin,$scope.comments=[],$log.info("EvidenceTalkCommentsController instantiated."),EvidenceComments.query({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId}).$promise.then(function(response){$log.info("loaded evidence talk comments."),$scope.comments=response},function(){$log.info("failed to load evidence talk comments.")})}angular.module("civic.events").directive("evidenceTalkComments",evidenceTalkComments).controller("EvidenceTalkCommentsController",EvidenceTalkCommentsController),EvidenceTalkCommentsController.$inject=["Security","$scope","$stateParams","EvidenceComments","$log"]}(),function(){"use strict";function evidenceTalkAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalkAddComment.tpl.html",controller:"EvidenceTalkAddCommentController",link:function($scope,Security){console.log("======== evidenceTalkAddComment linked."),$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function EvidenceTalkAddCommentController($scope,$stateParams,EvidenceComments,$log){$log.info("EvidenceTalkAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId),EvidenceComments.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.formStatus.messages.push("Your evidence comment was added."),EvidenceComments.query({geneId:$scope.gene.entrez_id,variantId:$scope.variant.id,evidenceItemId:$scope.evidence.id}).$promise.then(function(response){$scope.$parent.comments=response})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Invalid Route",errorMsg:"CIViC client requested a URL that does not exist."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("evidenceTalkAddComment",evidenceTalkAddComment).controller("EvidenceTalkAddCommentController",EvidenceTalkAddCommentController),EvidenceTalkAddCommentController.$inject=["$scope","$stateParams","EvidenceComments","$log"]}(),function(){"use strict";function evidenceTalkChangeAddComment(){var directive={restrict:"E",replace:!0,templateUrl:"app/views/events/evidence/directives/evidenceTalkChangeAddComment.tpl.html",controller:"EvidenceTalkChangeAddCommentController",link:function($scope,Security){$scope.isAuthenticated=Security.isAuthenticated,$scope.isAdmin=Security.isAdmin}};return directive}function EvidenceTalkChangeAddCommentController($scope,$stateParams,EvidenceSuggestedChangesComments,$log){$log.info("EvidenceTalkChangeAddCommentController instantiated.=========="),$scope.comment={},$scope.formStatus={errors:[],messages:[]},$scope.submitComment=function(){$log.info("submitComment called. geneId: "+$stateParams.geneId+" variantId: "+$stateParams.variantId+" suggestedChangeId: "+$stateParams.suggestedChangeId),EvidenceSuggestedChangesComments.add({geneId:$stateParams.geneId,variantId:$stateParams.variantId,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId,title:"TESTING",text:$scope.comment.text},function(){$log.info("add comment succeeded."),$scope.formStatus.errors=[],$scope.formStatus.messages=[],$scope.comment="",$scope.formStatus.messages.push("Your comment was added."),EvidenceSuggestedChangesComments.query({geneId:$scope.gene.entrez_id,variantId:$scope.variant.id,evidenceItemId:$stateParams.evidenceItemId,suggestedChangeId:$stateParams.suggestedChangeId}).$promise.then(function(response){$scope.$parent.changeComments=response},function(){$scope.formStatus.messages.push("Failed to load new updated comments")})},function(response){$log.info("add comment failed."),$scope.formStatus.messages=[],$scope.formStatus.errors=[];var handleError={401:function(){$scope.formStatus.errors.push({field:"Unauthrorized",errorMsg:"You must be logged in to perform this action."})},403:function(){$scope.formStatus.errors.push({field:"Insufficient Permissions",errorMsg:"You must be an Admin user to perform the requested action."})},404:function(){$scope.formStatus.errors.push({field:"Unknown Route",errorMsg:"The CIViC service requested an invalid URL."})},422:function(response){_.forEach(response.data.errors,function(value,key){$scope.formStatus.errors.push({field:key,errorMsg:value})})},500:function(response){$scope.formStatus.errors.push({field:"SERVER ERROR",errorMsg:response.statusText}),$log.info(response)}};handleError[response.status](response)})}}angular.module("civic.events").directive("evidenceTalkChangeAddComment",evidenceTalkChangeAddComment).controller("EvidenceTalkChangeAddCommentController",EvidenceTalkChangeAddCommentController),EvidenceTalkChangeAddCommentController.$inject=["$scope","$stateParams","EvidenceSuggestedChangesComments","$log"]}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/pages/authTest.tpl.html","<h1>Requires Auth</h1><p>{{ loadedMsg }}</p>")}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/pages/collaborate.tpl.html",'<div class="row" style="padding-top: 16px;"><div class="col-xs-6"><h3 class="col-title">Why CIViC?</h3><p>The driving motivation for CIViC is to encourage a sense of collaborative participation in the Clinical Interpretation of Variants in Cancer. Our hope is to provide an open forum made by researchers for researchers. The ultimate goal is to arrive at a community consensus for how to interpret genomic alterations in a clinical context for personalized cancer care.</p></div><div class="col-xs-6"><h3 class="col-title">How you can contribute:</h3><p>There are several mechanisms by which you can make a contribution to this important problem:</p><ol><li><strong>Create:</strong><br>Propose a new genomic variant (single nucleotide substitution, structural variant, gene fusion, etc), add evidence statements that support clinical actions assocated with such variants, or help create a synthesized interpretation or summary of the corpus of evidence for a variant.</li><li><strong>Correct:</strong><br>Submit a correction to any details about a genomic event, evidence statement or interpretation.</li><li><strong>Comment:</strong><br>Participate in an ongoing discussion in an effort to reach community consensus on the appropriate clinical action(s) for a genomic event.</li></ol></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/pages/contact.tpl.html",'<div class="row" style="padding-top: 16px;"><div class="col-xs-6"><dl><dt>Nicholas Spies - Lead Curator</dt><dd><a href="https://www.linkedin.com/pub/nicholas-spies/49/699/75a">LinkedIn profile</a></dd><dd><a href="mailto:nspies@genome.wutstl.edu">email</a></dd><br><dt>Kilannin Krysiak - Lead Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/kilannin-krysiak/">Genome Institute profile</a></dd><dd><a href="mailto:kkrysiak@genome.wustl.edu">email</a></dd><br><dt>Benjamin Ainscough - Curator</dt><dd><a href="http://genome.wustl.edu/people/individual/benjamin-ainscough/">Genome Institute profile</a></dd><dd><a href="mailto:bainscou@genome.wustl.edu">email</a></dd><br><dt>Adam Coffman - Lead Web/Software (Back End) Developer</dt><dd><a href="https://github.com/acoffman">GitHub Profile</a></dd><dd><a href="mailto:acoffman@genome.wustl.edu">email</a></dd><br><dt>Josh McMichael - Lead User Experience (Front End) Developer</dt><dd><a href="http://genome.wustl.edu/people/individual/joshua-mcmichael/">Genome Institute profile</a></dd><dd><a href="mailto:jmcmicha@genome.wustl.edu">email</a></dd><br><dt>Other Curators</dt><dd>Mayank Choudhary, Jason Kunisaki, Deng Pan</dd><br><dt>Other Developers</dt><dd><a href="https://github.com/JonChristensen">Jon Christensen</a>, <a href="https://github.com/gkarthik">Karthik Gangavarapu</a></dd></dl></div><div class="col-xs-6"><dt>Elaine Mardis, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/elaine-mardis/">Genome Institute profile</a></dd><dd><a href="mailto:emardis@genome.wustl.edu">email</a></dd><br><dt>Rick Wilson, PhD - PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/richard-wilson/">Genome Institute profile</a></dd><dd><a href="mailto:rwilson@genome.wustl.edu">email</a></dd><br><dt>Malachi Griffith, PhD - Creator, Curator, PI/Mentor</dt><dd><a href="http://genome.wustl.edu/people/individual/malachi-griffith/">Genome Institute profile</a></dd><dd><a href="mailto:mgriffit@genome.wustl.edu">email</a></dd><br><dt>Obi Griffith, PhD - Creator, Curator, PI/Mentor, Funding</dt><dd><a href="http://genome.wustl.edu/people/individual/obi-griffith/">Genome Institute profile</a></dd><dd><a href="mailto:ogriffit@genome.wustl.edu">email</a></dd><br></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/pages/help.tpl.html",'<h2>Understanding the CIViC data model</h2><p>At the heart of CIViC is the clinical evidence statement. The clinical evidence statement is a piece of information that has been manually curated from trustable medical literature about a variant or event that has implications in cancer diagnosis, prognosis, or predictive response to therapy. For example, “Patients with BRAF V600 mutations respond well to the drug dabrafenib”. The following tables define the minimal components and definitions required for a CIViC evidence statement. Once enough clinical evidence statements have been curated, a variant summary is generated describing the variants’ significance in cancer, along with current treatment methods. A gene level summary then synthesizes the variant summaries.</p><h3>Minimum Requirements for Clinical Evidence Statements</h3><table class="table table-striped table-condensed table-responsive table-bordered"><tr><th>Data type</th><th>Description</th><th>Example</th></tr><tr><td>Gene</td><td>Gene implicated (Entrez gene ID)</td><td>ESR1 (2099)</td></tr><tr><td>Variant</td><td>Event (SNV, Indel, Fusion, CNV) implicated</td><td>Y537S</td></tr><tr><td>Disease</td><td>Specific disease or disease subtype that is associated with this event and its clinical implication (Disease Ontology ID)</td><td>Estrogen-receptor positive breast cancer (DOID:0060075)</td></tr><tr><td>Evidence type</td><td>Category of clinical action implicated by event</td><td>Predictive</td></tr><tr><td>Evidence level</td><td>Levels of evidence for clinical actionability</td><td>Level B - clinical evidence</td></tr><tr><td>Evidence direction</td><td>A positive or negative value indicating whether the evidence statement supports or refutes a clinical association with the event</td><td>Positive - the evidence supports the association</td></tr><tr><td>Treatment (FDA status)</td><td>For predictive evidence, indicates the therapy for which sensitivity or resistance is indicated (With PubChem ID if applicable)</td><td>Hormone therapy (PCID: N/A)</td></tr><tr><td>Clinical Significance</td><td>Positive or negative association with treatment or diagnostic/prognostic end point</td><td>Negative - mutation is associated with resistance to therapy</td></tr><tr><td>Text summary (wiki-like)</td><td>Human readable interpretation. Free-form text summary of this event’s effect on cancer and potential clinical interpretations. This interpretation is the synthesis of all other information about an event and its relevance to clinical action and should be the living product of active discussion</td><td>Studies suggest ligand-binding-domain ESR1 mutants mediate clinical resistance to hormonal therapy and suggest that more potent estrogen receptor antagonists may be of substantial therapeutic benefit</td></tr><tr><td>Source</td><td>Literature where the event is described/explored (PubMed id)</td><td>PMID: 24185512</td></tr></table><h3>Breaking down the Evidence Statement</h3><table class="table table-striped table-condensed table-responsive table-bordered"><tr><th>Interaction Type</th><th>Evidence Direction</th><th>Clinical Significance</th><th>Example</th></tr><tr><td rowspan="5">Predictive - Evidence pertaining to a variant’s effect on therapeutic response</td><td rowspan="2">Supports: The experiment or study supports this variant’s response to a drug</td><td>Positive: Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>Breast cancer cell lines with H1047R mutation showed increased sensitivity to CH5132799 than cells with wild-type PIK3CA gene</td></tr><tr><td>Negative: Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>MAP2K1 P124S confers increased resistance to inhibition by AZD6244 inhibition by about 5 folds</td></tr><tr><td rowspan="3">Does not support: The experiment or study does not support, or was inconclusive of, an interaction between the variant and a drug</td><td>Positive: Variant is associated with positive response to treatment (e.g. sensitivity to drug)</td><td>BRAF V600E mutation does not predict response in patients treated with dacarbazine or temozolomide</td></tr><tr><td>N/A: Variant does not inform clinical action</td><td>This drug is not shown to have an impact on cell lines with mutation X</td></tr><tr><td>Negative: Variant is associated with negative treatment response (e.g. resistance to drug)</td><td>In a cohort of 100 patients, mutation X is not shown to confer resistance to drug Y</td></tr><tr><td rowspan="4">Diagnostic - Evidence pertaining to a variant’s impact on patient diagnosis</td><td rowspan="2">Supports: The experiment or study supports variant’s impact on the diagnosis of disease or subtype</td><td>Positive: Variant is associated with diagnosis of disease or subtype</td><td>BRAF V600E is shown to be associated with the tall-cell variant of PTC</td></tr><tr><td>Negative: Variant is associated with the lack of diagnosis of disease or subtype</td><td>Patients with mutation X are found not to have disease subtype A</td></tr><tr><td rowspan="2">Does not support: The experiment or study does not support the variant’s impact on diagnosis of disease or subtype</td><td>Positive: Variant is associated with diagnosis of disease or subtype</td><td>Study 1 found that, contrary to what was previously believed, mutation X does in fact show a correlation with disease subtype A</td></tr><tr><td>Negative: Variant is associated with the lack of diagnosis of disease or subtype</td><td>Study 1 found that, contrary to what was previously believed, mutation X does in fact show a correlation with disease subtype A</td></tr><tr><td rowspan="5">Prognostic - Evidence pertaining to a variant’s impact on disease progression, severity, or patient survival</td><td rowspan="2">Supports: The experiment or study supports a variant’s impact on prognostic outcome</td><td>Good Outcome: Variant is associated with a better overall patient outcome</td><td>In AML, patients with IDH2 R140K mutation has improved overall survival compared to those with wild-type IDH2</td></tr><tr><td>Poor Outcome: Variant is associated with a worse overall patient outcome</td><td>Meta-analysis of studies involving cytogentically normal younger (<60) patients="" showed="" increased="" overall="" and="" relapse-free="" survival="" for="" with="" npm1="" mutations<="" td=""></60)></td></tr><tr><td rowspan="3">Does not support: The experiment or study does not support a prognostic association between variant and outcome</td><td>Good Outcome: Variant is associated with a better overall patient outcome</td><td>Mutation X was not shown to be associated with improved overall survival</td></tr><tr><td>N/A: Variant does not inform clinical action</td><td>Size of the FLT3-ITD mutant duplication had no impact on overall survival or relapse rate</td></tr><tr><td>Poor Outcome: Variant is associated with a worse overall patient outcome</td><td>Mutation X was not shown to be associated with decreased overall survival</td></tr></table><h3>Evidence Levels: Overview</h3><table class="table table-striped table-condensed table-responsive table-bordered"><tr><th>Level of Evidence</th><th>Definition</th><th>Example</th></tr><tr><td>A - validated association</td><td>Proven/consensus association in human medicine</td><td>A meta-analysis of clinical studies showed that harboring a BRAF V600E mutation predicts worse prognosis in patients with colorectal cancer</td></tr><tr><td>B - clinical evidence</td><td>Clinical trial or other primary patient data supports association</td><td>In non-small-cell lung cancer patients with EGFR T790M and other activating mutations, their progression-free survival is shorter than those who do not have T790M mutations</td></tr><tr><td>C - preclinical evidence</td><td>In vivo or in vitro models support association</td><td>Experiments showed that AG1296 is effective in triggering apoptosis in cells with the FLT3 internal tandem repeat</td></tr><tr><td>D - inferential association</td><td>Indirect evidence</td><td>Glioma cells harboring IDH1 mutation may be more susceptible to chemotherapy or radiotherapy due to their reduced ability to respond to oxidative stress</td></tr></table>')
}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/pages/home.tpl.html",'<div class="home-view"><div class="row"><div class="col-xs-12 col-sm-6 discover"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="browse"><img src="assets/images/icon_discover.svg" alt="Discover" class="img-responsive"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Discover supported clinical intepretations of mutations related to cancer.</p></div></div></div><div class="col-xs-12 col-sm-6 collaborate"><div class="row"><div class="col-sm-12 col-md-6 icon"><a ui-sref="collaborate"><img src="assets/images/icon_collaborate.svg" alt="Discover" class="img-responsive" width="90%"></a></div><div class="col-sm-12 col-md-6 blurb"><p>Collaborate with colleagues to add variants and support for cancer-related mutations.</p></div></div></div></div><div class="row"><div class="col-xs-12 disclaimer-block"><div class="disclaimer" style="margin-bottom: 32px"><p><strong>Development Disclaimer:</strong> CIViC is under heavy development, therefore you will more likely than not experience bugs, unexpected behavior, missing features, and general instability. We will also be periodically dropping and re-importing the database, so any comments or updates you make while CIViC is under development will likely be lost.</p></div><div class="disclaimer"><p><strong>Medical Disclaimer: This resource is intended for purely research purposes. It should not be used for emergencies or medical or professional advice.</strong></p><p>CIViC is a community-edited forum for discussion and interpretation of peer-reviewed publications pertaining to the clinical relevance of variants (or biomarker alterations) in cancer. These interpretations may include associations between molecular alterations (or lack of alteration) and one or more drugs, diagnoses, prognoses or other treatment decisions. These interpretations of clinical significance (or lack of clinical significance) are purely for research purposes. A finding of no interpretation does not necessarily indicate lack of relevance for any specific variant or biomarker alteration. Interpretations are not presented in ranked order of potential or predicted importance.These interpretations make no promise or guarantee of any clinical benefit (or lack of clinical benefit).</p><p>The civicdb.org (civic.genome.wustl.edu) website does not provide any medical or healthcare products, services or advice, and is not for medical emergencies or urgent situations. <strong>IF YOU THINK YOU MAY HAVE A MEDICAL EMERGENCY, CALL YOUR DOCTOR OR 911 IMMEDIATELY</strong>. Information contained on this website is not a substitute for a doctor\'s medical judgment or advice. We recommend that you discuss your specific, individual health concerns with your doctor or health care professional.</p></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/civicLogo.tpl.html",'<div class="civicLogo"><a ui-sref="home"><div ng-switch="" on="$root.view.navMode"><span ng-switch-when="home"><img src="assets/images/CIViC_logo@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="375" height="240" class="img-responsive"></span> <span ng-switch-when="sub"><img src="assets/images/CIViC_logo_sm@2x.png" alt="CIViC: Clinical Interpretations of Variations in Cancer" width="155" height="76"></span></div></a></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/headerSearch.tpl.html",'<div class="headerSearch" ng-show="$root.view.navMode == \'home\'"><quick-search class="col-xs-8 col-md-12"></quick-search><div class="col-xs-4 col-md-12"><a class="btn btn-browse-margin btn-justified btn-block hidden-sm hidden-xs" ui-sref="browse">Browse CIViC Database</a> <a class="btn btn-browse btn-justified btn-block hidden-md hidden-lg" ui-sref="browse">Browse</a></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/loginToolbar.tpl.html",'<div class="loginToolbar"><div class="login-toolbar-lg hidden-xs hidden-sm"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle"><span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li><a ng-click="logout(currentUrl)">Sign Out</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Sign In/Sign Up</button></div></div><div class="login-toolbar-sm hidden-md hidden-lg"><div ng-show="isAuthenticated()" class="user-controls"><div class="btn-group" dropdown=""><button type="button" class="btn btn-xs btn-info">{{ currentUser.name }}</button> <button type="button" class="btn btn-xs btn-info dropdown-toggle"><span class="caret"></span></button><ul class="dropdown-menu" role="menu"><li><a ng-click="logout(currentUrl)">Sign Out</a></li></ul></div></div><div ng-hide="isAuthenticated()" class="viewer-controls"><button class="btn btn-xs btn-login" ng-click="login()">Sign In/Sign Up</button></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/mainMenu.tpl.html",'<div class="mainMenu"><div class="main-menu-lg hidden-xs hidden-sm"><ul><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li><login-toolbar></login-toolbar></li></ul></div><div class="main-menu-sm hidden-md hidden-lg"><ul class="main-menu-sm hidden-md hidden-lg"><li ng-repeat="item in menuItems" ui-sref-active="active"><a ui-sref="{{ item.state}}">{{ item.label }}</a></li><li style="position: relative;"><login-toolbar></login-toolbar></li></ul></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/quickSearch.tpl.html",'<div class="quickSearch"><form class="form-horizontal"><div class="form-group form-group-sm has-feedback"><input type="text" class="form-control input-sm" ng-model="asyncSelected" placeholder="Quick Event Search" typeahead="gene as gene.label for gene in getVariants($viewValue)" typeahead-loading="loadingGenes" typeahead-on-select="onSelect($item, $model, $label)"> <span ng-show="loadingGenes" class="glyphicon glyphicon-refresh form-control-feedback"></span></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/directives/subheader.tpl.html",'<div class="subheader" ng-hide="$root.view.navMode == \'home\'"><div class="container-fluid"><div class="subheader-bg"><div class="row"><div class="col-xs-6"><h1>{{ view.stateTitle }}</h1></div><div class="col-xs-4 col-med-4 col-lg-5 search-sub-input"><quick-search></quick-search></div><div class="col-xs-2 col-med-2 col-lg-1 search-sub-browse"><a type="button" class="btn btn-sm btn-browse-sub btn-block" ui-sref="browse">Browse</a></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/browse/browse.tpl.html",'<div class="browseView"><div ui-grid="browseGridOptions" external-scopes="gridInteractions" ui-grid-auto-resize=""></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/browse/browseGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" ng-click="getExternalScopes().rowClick(row)" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/eventsView.tpl.html",'<div class="eventsView"><div ui-view=""><div class="row"><div class="col-xs-12"><div class="geneList"><p><strong>Please choose a gene from the list below to view its variants:</strong></p><ul class="nav nav-pills nav-stacked gene-menu"><li ng-repeat="gene in genes | sortBy: gene.entrez_name"><a ui-sref="events.genes.summary({ geneId: gene.entrez_id })">{{ gene.entrez_name }}</a></li></ul></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("components/security/login/LoginForm.tpl.html",'<form name="form" novalidate="" class="login-form"><div class="modal-header"><h4>Sign in</h4></div><div class="modal-body"><div class="alert alert-info">Sign in by choosing one of the methods below:</div><ul><li><a href="api/auth/github?origin={{ location | encodeUri }}">Sign in with Github</a></li></ul></div><div class="modal-footer"><button class="btn btn-warning cancel" ng-click="cancelLogin()">Cancel</button></div></form>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/common/variantsMenu.tpl.html",'<div class="variantsMenu"><div ng-switch="" on="gene.variants.length > 0 || typeof(gene.variantGroups)"><div ng-switch-when="true"><div ng-show="gene.variants.length > 0"><div class="title"><span ng-bind="gene.entrez_name"></span> Variants:</div><ul class="nav nav-pills nav-stacked"><li ng-repeat="variant in gene.variants" ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })">{{ variant.name }}</a></li></ul></div><div ng-show="variantGroupsExist"><div class="title"><span>{{ gene.entrez_name }} Variant Groups:</span></div><ul class="nav nav-pills nav-stacked variant-group"><li ng-repeat="variant_group in gene.variant_groups" ui-sref-active="active"><a ng-bind="variant_group.name" ui-sref="events.genes.summary.variantGroups.summary({ geneId:gene.entrez_id, variantGroupId: variant_group.id })" ui-sref-active="active" class="group-title"></a><ul class="nav nav-pills nav-stacked"><li ng-repeat="variant in variant_group.variants" ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })" class="variant">{{ variant.name }}</a></li></ul></li></ul></div></div><div ng-switch-default=""><ul class="nav nav-pills nav-stacked"><li>No variants found.</li></ul></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/evidenceView.tpl.html",'<div class="evidenceView"><div class="row" style="margin: 0"><evidence-tabs class="col-xs-12"></evidence-tabs></div><div class="row" style="margin: 0"><div ui-view=""></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/genesView.tpl.html",'<div class="genesView"><div class="row"><gene-tabs class="col-xs-12"></gene-tabs></div><div class="row"><div ui-view=""></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/variantGroupsView.tpl.html",'<div class="variantGroupsView"><div class="col-xs-12 col-sm-12 col-md-10 col-lg-10"><div class="row"><variant-group-tabs class="col-xs-12"></variant-group-tabs></div><div class="row"><div ui-view="" class="col-xs-12"></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/variantsView.tpl.html",'<div class="variantsView"><div class="col-xs-12 col-sm-12 col-md-10 col-lg-10"><div class="row"><variant-tabs class="col-xs-12"></variant-tabs></div><div class="row"><div ui-view="" class="col-xs-12"></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceEdit.tpl.html",'<div class="evidenceEdit"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Text:</label> <textarea class="form-control" id="description" rows="10" ng-model="evidenceEdit.text"></textarea></div></div><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Please provide a reason for your updates:</label> <textarea class="form-control" id="reason" rows="10" ng-model="evidenceEdit.reason"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceSummary.tpl.html",'<div class="evidenceSummary"><div class="row"><div class="col-xs-12 explanation"><p ng-bind-html="evidence.text | linky"></p></div></div><div class="row"><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Rating:</td><td class="value"><rating ng-model="evidence.rating" max="5" readonly="true"></rating></td></tr><tr><td class="name">Evidence Level:</td><td class="value"><span class="levelBadge" ng-class="{\'levelA\': evidence.evidence_level === \'A\', \'levelB\': evidence.evidence_level === \'B\',\'levelC\': evidence.evidence_level === \'C\', \'levelD\': evidence.evidence_level === \'D\', \'levelE\': evidence.evidence_level === \'E\' }">{{ evidence.evidence_level }}</span></td></tr><tr><td class="name">Evidence Type:</td><td class="value">{{ evidence.evidence_type }}</td></tr><tr><td class="name">Citation:</td><td class="value"><a href="{{ evidence.source_url }}" _target="blank">{{ evidence.citation }}</a></td></tr></table></div><div class="col-xs-12 col-md-6 details"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Disease:</td><td class="value">{{ evidence.disease }}</td></tr><tr><td class="name">Drug:</td><td class="value">{{ evidence.drug }}</td></tr><tr><td class="name">Clinical Significance:</td><td class="value">{{ evidence.clinical_significance }}</td></tr><tr><td class="name">Evidence Direction:</td><td class="value">{{ evidence.evidence_direction }}</td></tr></table></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTabs.tpl.html",'<div class="evidenceTabs"><div class="row"><div class="col-xs-6 name"><h3>Evidence ID: EID{{evidence.id}} <a ng-show="isAuthenticated()" ui-sref="events.genes.summary.variants.summary.evidence.edit({geneId: gene.entrez_id, variantId: variant.id, evidenceItemId: evidence.id })" class="btn btn-primary btn-xs btn-edit" ng-disabled="$state.includes(\'**.evidence.edit\')">Edit Evidence</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary.evidence.summary({ geneId: gene.entrez_id, variantId: variant.id, evidenceItemId: evidence.id })">Evidence Summary</a></li><li ng-class="{\'active\': $state.includes(\'**.evidence.talk.**\')}"><a ui-sref="events.genes.summary.variants.summary.evidence.talk.comments({ geneId: gene.entrez_id, variantId: variant.id, evidenceItemId: evidence.id })">Evidence Talk</a></li></ul></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTalk.tpl.html",'<div class="evidenceTalk"><div class="row"><div class="col-xs-4 col-sm-4 col-md-3 col-lg-3 comments-menu"><ul class="nav nav-pills nav-stacked"><li ui-sref-active="active" class="gene-comment-tab"><a ui-sref="events.genes.summary.variants.summary.evidence.talk.comments({ geneId: gene.entrez_id, variantId: variant.id, evidenceItemId: evidence.id })" class="gene-name"><span ng-bind="\'EID\' + evidence.id"></span> Comments</a></li></ul><div ng-repeat="status in statusOrder"><div ng-if="statusGroups[status].length > 0"><h5>{{ status | capitalize }} Changes:</h5><ul class="nav nav-pills nav-stacked"><li ng-repeat="change in statusGroups[status]" ui-sref-active="active" ng-class="{\'new\': change.status === \'new\', \'act\': change.status === \'active\', \'applied\': change.status === \'applied\', \'closed\': change.status === \'closed\'}"><a ui-sref="events.genes.summary.variants.summary.evidence.talk.changes({ geneId: gene.entrez_id, suggestedChangeId: change.id, evidenceItemId: evidence.id })">#<span ng-bind="change.id"></span> <span ng-bind="change.user" class="user">[user]</span><br><span ng-bind="change.created_at | timeAgo" class="time">[time]</span></a></li></ul></div></div></div><div class="col-xs-8 col-sm-8 col-md-9 col-lg-9 evidenceUIView"><ui-view><p>Click a suggested change to view details and conversation</p></ui-view></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTalkAddComment.tpl.html",'<div class="evidenceTalkAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTalkChange.tpl.html",'<div class="evidenceTalkChange"><div class="row"><div class="col-xs-12"><h4>Current Record:</h4><p ng-bind-html="evidence.text | linky">LOADING EVIDENCE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>Suggested Change #<span ng-bind="suggestedChange.id">ID</span> Diff:</h4><p ng-bind-html="suggestedChange.diffs.text"></p></div></div><div class="row" ng-show="isAdmin() && (suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\')"><div class="col-xs-12"><div class="admin-controls"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="commitChange()">Commit Change</button></div></div></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="changeComments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for Suggested Change #<span ng-bind="suggestedChange.id"></span>.</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in changeComments"><div class="col-xs-12"><div class="comment-block" style="background-color: #FFF !important;"><div class="title"><p><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></p></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div ng-show="suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\'"><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><evidence-talk-change-add-comment class="col-xs-12"></evidence-talk-change-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTalkChangeAddComment.tpl.html",'<div class="evidenceTalkChangeAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/evidence/directives/evidenceTalkComments.tpl.html",'<div class="evidenceTalkComments"><div class="row"><div class="col-xs-12"><h4>Evidence Item <span ng-bind="evidence.id">VARIANT</span> Description:</h4><p ng-bind-html="evidence.text| linky">LOADING VARIANT DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="comments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for EID{{ evidence.id }}</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in comments"><div class="col-xs-12"><div class="comment-block" style="background-color: white !important;"><div class="title"><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><evidence-talk-add-comment class="col-xs-12"></evidence-talk-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneEdit.tpl.html",'<div class="geneEdit" xmlns="http://www.w3.org/1999/html"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Description:</label> <textarea class="form-control" id="description" rows="10" ng-model="geneEdit.description"></textarea></div></div><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Please provide a reason for your updates:</label> <textarea class="form-control" id="reason" rows="10" ng-model="geneEdit.reason"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneSummary.tpl.html",'<div class="geneSummary"><div class="row summary-content"><div class="col-xs-12 col-md-6"><p><strong>Clinical Description:</strong></p><p ng-bind-html="gene.description | linky"></p><p><strong>MyGeneInfo Summary:</strong></p><p ng-bind-html="geneDetails.summary | linky"></p></div><div class="col-xs-12 col-md-6"><my-gene-info></my-gene-info></div></div><div class="row"><div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><variants-menu></variants-menu></div><div ui-view="" class="genesUIView"><div class="col-xs-12 col-sm-12 col-md-10 col-lg-10 selectMsg"><div class="detail-corner"><div class="corner-edge"></div></div><p>&#8592; Select a variant to view its details.</p></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTabs.tpl.html",'<div class="geneTabs"><div class="row"><div class="col-xs-6 name"><h3>Gene {{ gene.entrez_name }} <a ng-show="isAuthenticated()" ui-sref="events.genes.edit({geneId: gene.entrez_id})" class="btn btn-primary btn-xs btn-edit" ng-disabled="$state.includes(\'**.genes.edit\')">Edit Gene</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary({ geneId: gene.entrez_id})">Gene Summary</a></li><li ng-class="{\'active\': $state.includes(\'**.genes.talk.**\')}"><a ui-sref="events.genes.talk.comments({ geneId: gene.entrez_id })">Gene Talk</a></li></ul></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTalk.tpl.html",'<div class="geneTalk"><div class="row"><div class="col-xs-4 col-sm-4 col-md-3 col-lg-3 comments-menu"><ul class="nav nav-pills nav-stacked"><li ui-sref-active="active" class="gene-comment-tab"><a ui-sref="events.genes.talk.comments({ geneId: gene.entrez_id })" class="gene-name"><span ng-bind="gene.entrez_name"></span> Comments</a></li></ul><div ng-repeat="status in statusOrder"><div ng-if="statusGroups[status].length > 0"><h5>{{ status | capitalize }} Changes:</h5><ul class="nav nav-pills nav-stacked"><li ng-repeat="change in statusGroups[status]" ui-sref-active="active" ng-class="{\'new\': change.status === \'new\', \'act\': change.status === \'active\', \'applied\': change.status === \'applied\', \'closed\': change.status === \'closed\'}"><a ui-sref="events.genes.talk.changes({ geneId: gene.entrez_id, suggestedChangeId: change.id })">#<span ng-bind="change.id"></span> <span ng-bind="change.user" class="user">[user]</span><br><span ng-bind="change.created_at | timeAgo" class="time">[time]</span></a></li></ul></div></div></div><div class="col-xs-8 col-sm-8 col-md-9 col-lg-9"><ui-view><p>Click a suggested change to view details and conversation</p></ui-view></div></div></div>')
}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTalkAddComment.tpl.html",'<div class="geneTalkAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTalkChange.tpl.html",'<div class="geneTalkChange"><div class="row"><div class="col-xs-12"><h4>Current Record:</h4><p ng-bind-html="gene.description | linky">LOADING GENE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>Suggested Change #<span ng-bind="suggestedChange.id">ID</span> Diff:</h4><p ng-bind-html="suggestedChange.diffs.description"></p></div></div><div class="row" ng-show="auth.isAdmin() && (suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\')"><div class="col-xs-12"><div class="admin-controls"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="commitChange()">Commit Change</button></div></div></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="changeComments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for Suggested Change #<span ng-bind="suggestedChange.id"></span>.</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in changeComments"><div class="col-xs-12"><div class="comment-block"><div class="title"><p><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></p></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div ng-show="suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\'"><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="auth.isAuthenticated()"><div ng-switch-when="true"><gene-talk-change-add-comment class="col-xs-12"></gene-talk-change-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTalkChangeAddComment.tpl.html",'<div class="geneTalkChangeAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/geneTalkComments.tpl.html",'<div class="geneTalkComments"><div class="row"><div class="col-xs-12"><h4><span ng-bind="gene.entrez_name">GENE</span> Description:</h4><p ng-bind-html="gene.description | linky">LOADING GENE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="comments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for {{ gene.entrez_name }}</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in comments"><div class="col-xs-12"><div class="comment-block"><div class="title"><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><gene-talk-add-comment class="col-xs-12"></gene-talk-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/myGeneInfo.tpl.html",'<div class="myGeneInfo"><table class="table table-condensed summary-details"><colgroup><col width="30%"><col width="70%"></colgroup><tr><td class="name">Name:</td><td class="value" ng-bind-html="geneDetails.name"></td></tr><tr><td class="name">Synonyms:</td><td class="value" ng-bind-html="geneDetails.alias | arrayToList "></td></tr><tr><td class="name">Protein Domains:</td><td class="value" ng-bind-html="geneDetails.interpro | pluck: \'desc\' | arrayToList:5:\'&hellip;\':true"></td></tr><tr><td class="name">Pathways:</td><td class="value" ng-bind-html="geneDetails.pathway | pluck: \'name\' | arrayToList:5:\'&hellip;\':true"></td></tr><tr><td>&nbsp;</td><td><button class="btn btn-block btn-default" ng-click="viewGeneDetails()">View Full Details from MyGene.info</button></td></tr></table></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/genes/directives/myGeneInfoDialog.tpl.html",'<div class="myGeneInfoDialog"><div class="row header"><div class="col-xs-12"><h3>Gene {{ geneDetails.symbol }} Details from <a href="http://mygene.info/" target="_new">MyGene.info</a></h3></div></div><div class="row"><div class="col-xs-12"><p><strong>Gene Summary:</strong><br><span ng-bind-html="geneDetails.summary"></span></p></div></div><div class="row"><div class="col-xs-12"><p><strong>Synonyms:</strong><br><span ng-bind-html="geneDetails.alias"></span></p></div></div><div class="row grid-row"><div class="col-xs-12"><div ui-grid="proteinDomainsGridOptions" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row grid-row"><div class="col-xs-12"><div ui-grid="pathwaysGridOptions" class="dataGrid" ui-grid-auto-resize=""></div></div></div><div class="row button-row"><div class="col-xs-12"><div class="pull-right"><button type="button" class="btn btn-default" ng-click="done()">Done</button></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupEdit.tpl.html",'<div class="variantGroupEdit" xmlns="http://www.w3.org/1999/html"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="name">Name:</label> <input type="text" id="name" ng-model="variantGroupEdit.name"></div><div class="form-group"><label for="description">Description:</label> <textarea class="form-control" id="description" rows="10" ng-model="variantGroupEdit.description"></textarea></div><h4>All Suggested Changes:</h4><pre>{{ variantGroupsSuggestedChanges | json }}</pre></div><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Please provide a reason for your updates:</label> <textarea class="form-control" id="reason" rows="10" ng-model="variantGroupEdit.reason"></textarea></div><h4>Submitted Suggested Change:</h4><pre>{{ newChange | json }}</pre><h4>Reason:</h4><pre>{{ variantGroupEdit.reason | json }}</pre></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupSummary.tpl.html",'<div class="variantGroupSummary"><div class="row"><div class="col-xs-12"><div ng-switch="variantGroup.description"><div ng-switch-when="null"><p>No description exists for this Variant Group. Would you like to create one?</p></div><div ng-switch-default=""><p ng-bind="variantGroup.description"></p><pre>{{ variantGroup.description | json }}</pre></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupTabs.tpl.html",'<div class="variantTabs"><div class="row"><div class="detail-corner"><div class="corner-edge"></div></div><div class="col-xs-6 name"><h3 fittext="" fittext-max="24px" fittext-min="12px">Variant Group <span ng-bind="variantGroup.name">GROUP NAME</span> <a ng-show="isAuthenticated()" ui-sref="events.genes.summary.variantGroups.edit({geneId: gene.entrez_id, variantGroupId: variantGroup.id})" class="btn btn-primary btn-xs btn-edit">Edit Variant Group</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary.variantGroups.summary({ geneId: gene.entrez_id, variantGroup: variantGroup.id })">Variant Group Summary</a></li><li ui-sref-active="active"><a ui-sref="events.genes.summary.variantGroups.talk.comments({ geneId: gene.entrez_id, variantId: variantGroup.id })">Variant Group Talk</a></li></ul></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupTalk.tpl.html",'<div class="variantGroupTalk"><div class="row"><div class="col-xs-4 col-sm-4 col-md-3 col-lg-3 comments-menu"><ul class="nav nav-pills nav-stacked"><li ui-sref-active="active" class="gene-comment-tab"><a ui-sref="events.genes.summary.variantGroups.talk.comments({ geneId: gene.entrez_id, variantGroupId: variantGroup.id })" class="entity-name"><span ng-bind="variantGroup.name"></span> Comments</a></li></ul><div ng-repeat="status in statusOrder"><div ng-if="statusGroups[status].length > 0"><h5>{{ status | capitalize }} Changes:</h5><ul class="nav nav-pills nav-stacked"><li ng-repeat="change in statusGroups[status]" ui-sref-active="active" ng-class="{\'new\': change.status === \'new\', \'act\': change.status === \'active\', \'applied\': change.status === \'applied\', \'closed\': change.status === \'closed\'}"><a ui-sref="events.genes.summary.variantGroups.talk.changes({ variantGroupId: variantGroup.id, suggestedChangeId: change.id })">#<span ng-bind="change.id"></span> <span ng-bind="change.user" class="user">[user]</span><br><span ng-bind="change.created_at | timeAgo" class="time">[time]</span></a></li></ul></div></div></div><div class="col-xs-8 col-sm-8 col-md-9 col-lg-9"><ui-view><p>Click a suggested change to view details and conversation</p></ui-view></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupTalkAddComment.tpl.html",'<div class="variantGroupTalkAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupTalkChangeAddComment.tpl.html",'<div class="variantGroupTalkChangeAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variantGroups/directives/variantGroupTalkComments.tpl.html",'<div class="variantGroupTalkComments"><div class="row"><div class="col-xs-12"><h4><span ng-bind="variantGroup.id">GENE</span> Description:</h4><p ng-bind-html="variantGroup.description | linky">LOADING GENE DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="comments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for {{ variantGroup.name }}</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in comments"><div class="col-xs-12"><div class="comment-block"><div class="title"><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><variant-group-talk-add-comment class="col-xs-12"></variant-group-talk-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/evidenceGrid.tpl.html",'<div class="evidenceGrid"><div ui-grid="evidenceGridOptions" external-scopes="gridInteractions" ui-grid-cellnav="" ui-grid-auto-resize="" ui-grid-selection=""></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/evidenceGridEvidenceCell.tpl.html",'<div class="ngCellText" ng-class="col.colIndex()" tooltip="{{row.entity[col.field]}}" tooltip-append-to-body="true"><div ng-switch="" on="row.entity[col.field].length > 0"><div ng-switch-when="true" class="ui-grid-cell-contents">{{ row.entity[col.field] }}</div><div ng-switch-when="false">No summary found.</div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/evidenceGridLevelCell.tpl.html","<div class=\"levelCell ngCellText\" style=\"{{ 'height:' + row.height + 'px;'}}\"><span ng-cell-text=\"\" class=\"btn-block\" ng-class=\"{'levelA': row.entity[col.field] === 'A', 'levelB': row.entity[col.field] === 'B','levelC': row.entity[col.field] === 'C', 'levelD': row.entity[col.field] === 'D', 'levelE': row.entity[col.field] === 'E' }\">{{ row.entity[col.field] }}</span></div>")}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/evidenceGridRatingCell.tpl.html",'<div class="ratingCell ngCellText" ng-class="col.colIndex()"><rating ng-model="row.entity[col.field]" max="5" readonly="true"></rating></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/evidenceGridRow.tpl.html",'<div ng-repeat="(colRenderIndex, col) in colContainer.renderedColumns track by col.colDef.name" class="ui-grid-cell" ng-class="{ \'ui-grid-row-header-cell\': col.isRowHeader }" ui-grid-cell=""></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantEdit.tpl.html",'<div class="variantEdit" xmlns="http://www.w3.org/1999/html"><form role="form" novalidate=""><div class="row form-instructions" ng-show="formStatus.messages.length == 0 && formStatus.errors.length == 0"><div class="col-xs-12"><p>Complete your edits using the form below, then press the \'Submit Edits for Review\' button. <span ng-show="isAdmin()">As you are an admin, you may also choose to immediately apply your edits without review by clicking \'Apply Edits\'.</span></p></div></div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested edits contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Description:</label> <textarea class="form-control" id="description" rows="10" ng-model="variantEdit.description"></textarea></div></div><div class="col-xs-12 col-md-6"><div class="form-group"><label for="description">Please provide a reason for your updates:</label> <textarea class="form-control" id="reason" rows="10" ng-model="variantEdit.reason"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-default btn-md" ng-click="discardEdits()">Discard Edits</button> <button type="button" class="btn btn-primary btn-md" ng-click="submitEdits()">Submit Edits for Review</button> <button type="button" class="btn btn-warning btn-md" ng-click="applyEdits()" ng-show="isAdmin()">Apply Edits</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantSummary.tpl.html",'<div class="variantSummary"><div class="row"><div class="col-xs-12"><p ng-bind-html="variant.description"></p></div></div><div class="row"><div class="col-xs-12"><evidence-grid></evidence-grid></div></div><div ui-view=""><div class="variantsUIView"><p>&uarr; Click on an evidence item in the table above to reveal its details here.</p></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTabs.tpl.html",'<div class="variantTabs"><div class="row"><div class="detail-corner"><div class="corner-edge"></div></div><div class="col-xs-6 name"><h3 fittext="" fittext-max="24px" fittext-min="12px">Variant {{ variant.name}} <a ng-show="isAuthenticated()" ui-sref="events.genes.summary.variants.edit({geneId: gene.entrez_id, variantId: variant.id})" class="btn btn-primary btn-xs btn-edit" ng-disabled="$state.includes(\'**.variants.edit\')">Edit Variant</a></h3></div><div class="col-xs-6 tabs"><ul class="nav nav-tabs pull-right"><li ui-sref-active="active"><a ui-sref="events.genes.summary.variants.summary({ geneId: gene.entrez_id, variantId: variant.id })">Variant Summary</a></li><li ng-class="{\'active\': $state.includes(\'**.variants.talk.**\')}"><a ui-sref="events.genes.summary.variants.talk.comments({ geneId: gene.entrez_id, variantId: variant.id })">Variant Talk</a></li></ul></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTalk.tpl.html",'<div class="variantTalk"><div class="row"><div class="col-xs-4 col-sm-4 col-md-3 col-lg-3 comments-menu"><ul class="nav nav-pills nav-stacked"><li ui-sref-active="active" class="gene-comment-tab"><a ui-sref="events.genes.summary.variants.talk.comments({ geneId: gene.entrez_id, variantId: variant.id })" class="gene-name"><span ng-bind="variant.name"></span> Comments</a></li></ul><div ng-repeat="status in statusOrder"><div ng-if="statusGroups[status].length > 0"><h5>{{ status | capitalize }} Changes:</h5><ul class="nav nav-pills nav-stacked"><li ng-repeat="change in statusGroups[status]" ui-sref-active="active" ng-class="{\'new\': change.status === \'new\', \'act\': change.status === \'active\', \'applied\': change.status === \'applied\', \'closed\': change.status === \'closed\'}"><a ui-sref="events.genes.summary.variants.talk.changes({ geneId: gene.entrez_id, suggestedChangeId: change.id })">#<span ng-bind="change.id"></span> <span ng-bind="change.user" class="user">[user]</span><br><span ng-bind="change.created_at | timeAgo" class="time">[time]</span></a></li></ul></div></div></div><div class="col-xs-8 col-sm-8 col-md-9 col-lg-9 variantUIView"><ui-view><p>Click a suggested change to view details and conversation</p></ui-view></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTalkAddComment.tpl.html",'<div class="variantTalkAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTalkChange.tpl.html",'<div class="variantTalkChange"><div class="row"><div class="col-xs-12"><h4>Current Record:</h4><p ng-bind-html="variant.description | linky">LOADING VARIANT DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>Suggested Change #<span ng-bind="suggestedChange.id">ID</span> Diff:</h4><p ng-bind-html="suggestedChange.diffs.description"></p></div></div><div class="row" ng-show="isAdmin() && (suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\')"><div class="col-xs-12"><div class="admin-controls"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="commitChange()">Commit Change</button></div></div></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="changeComments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for Suggested Change #<span ng-bind="suggestedChange.id"></span>.</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in changeComments"><div class="col-xs-12"><div class="comment-block" style="background-color: #FFF !important;"><div class="title"><p><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></p></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div ng-show="suggestedChange.status != \'applied\' && suggestedChange.status != \'closed\'"><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><variant-talk-change-add-comment class="col-xs-12"></variant-talk-change-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div></div>')}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTalkChangeAddComment.tpl.html",'<div class="variantTalkChangeAddComment"><form role="form" novalidate=""><div class="formInstructions">Enter a comment and hit \'Submit Comment\':</div><div class="row form-messages" ng-show="formStatus.messages.length > 0"><div class="col-xs-12"><div class="row" ng-repeat="message in formStatus.messages"><div class="col-xs-12"><p>{{ message }}</p></div></div></div></div><div class="row form-errors" ng-show="formStatus.errors.length > 0"><div class="col-xs-12"><p>The requested comment contain the following errors, please correct and resubmit:</p><div class="row" ng-repeat="error in formStatus.errors"><div class="col-xs-2"><p class="pull-right"><strong>{{ error.field | labelify }}:</strong></p></div><div class="col-xs-10"><p>{{ error.errorMsg | arrayToList }}</p></div></div></div></div><div class="row form-row"><div class="col-xs-12"><div class="form-group"><textarea class="form-control" id="comment" rows="5" ng-model="comment.text"></textarea></div></div></div><div class="row"><div class="col-xs-12"><div class="button-row"><div class="pull-right"><button type="button" class="btn btn-warning btn-md" ng-click="submitComment()">Submit Comment</button></div></div></div></div></form></div>')
}])}(),function(module){try{module=angular.module("civicClient")}catch(e){module=angular.module("civicClient",[])}module.run(["$templateCache",function($templateCache){$templateCache.put("app/views/events/variants/directives/variantTalkComments.tpl.html",'<div class="variantTalkComments"><div class="row"><div class="col-xs-12"><h4><span ng-bind="variant.name">VARIANT</span> Description:</h4><p ng-bind-html="variant.description | linky">LOADING VARIANT DESCRIPTION</p></div></div><div class="row"><div class="col-xs-12"><h4>COMMENTS:</h4></div></div><div ng-switch="comments.length > 0"><div ng-switch-when="false"><div class="row"><div class="col-xs-12"><p>No comments found for {{ variant.name }}</p></div></div></div><div ng-switch-when="true"><div class="row" ng-repeat="comment in comments"><div class="col-xs-12"><div class="comment-block" style="background-color: white !important;"><div class="title"><strong>Posted by</strong> <span ng-bind="comment.user.nickname">user.nickname</span> <span ng-bind="comment.created_at | timeAgo">comment.created_at</span></div><div class="body"><p ng-bind="comment.text">comment.text</p></div></div></div></div></div></div><div class="row"><div class="col-xs-12"><h4>ADD A COMMENT:</h4></div></div><div class="row"><div ng-switch="isAuthenticated()"><div ng-switch-when="true"><variant-talk-add-comment class="col-xs-12"></variant-talk-add-comment></div><div ng-switch-when="false"><div class="col-xs-12"><p>Login to post comments.</p></div></div></div></div></div>')}])}();